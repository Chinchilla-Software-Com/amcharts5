{"version":3,"sources":["webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/HierarchyDefaultTheme.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/BreadcrumbBar.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/HierarchyNode.ts","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/count.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/index.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/each.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/find.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/sum.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/sort.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/path.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/ancestors.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/descendants.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/leaves.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/links.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/iterator.js","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/Hierarchy.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/LinkedHierarchyNode.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/HierarchyLink.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/LinkedHierarchy.ts","webpack://@amcharts/amcharts5/./node_modules/d3-force/src/lcg.js","webpack://@amcharts/amcharts5/./node_modules/d3-force/src/simulation.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/add.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/quad.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/x.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/y.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/quadtree.js","webpack://@amcharts/amcharts5/./node_modules/d3-force/src/constant.js","webpack://@amcharts/amcharts5/./node_modules/d3-force/src/jiggle.js","webpack://@amcharts/amcharts5/./node_modules/d3-force/src/collide.js","webpack://@amcharts/amcharts5/./node_modules/d3-force/src/link.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/cover.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/data.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/extent.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/find.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/remove.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/root.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/size.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/visit.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/visitAfter.js","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/ForceDirected.ts","webpack://@amcharts/amcharts5/./node_modules/d3-force/src/x.js","webpack://@amcharts/amcharts5/./node_modules/d3-force/src/y.js","webpack://@amcharts/amcharts5/./node_modules/d3-force/src/manyBody.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/pack/enclose.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/pack/siblings.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/array.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/accessors.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/constant.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/pack/index.js","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/Pack.ts","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/treemap/round.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/treemap/dice.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/partition.js","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/Partition.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/Sunburst.ts","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/tree.js","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/Tree.ts","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/treemap/slice.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/treemap/squarify.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/treemap/index.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/treemap/binary.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/treemap/sliceDice.js","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/Treemap.ts","webpack://@amcharts/amcharts5/./tmp/webpack/hierarchy.js"],"names":["setupDefaultRules","ic","this","_root","interfaceColors","gridLayout","r","rule","bind","setAll","legendLabelText","legendValueText","width","height","colors","ColorSet","step","downDepth","initialDepth","singleBranchOnly","maskContent","animationEasing","toggleKey","setStateOnChildren","position","isMeasured","cursorOverStyle","tooltipText","centerX","centerY","paddingBottom","paddingTop","paddingRight","paddingLeft","text","populateText","oversizedBehavior","minScale","strokeWidth","strokeOpacity","strength","distance","fillOpacity","radius","tooltipY","opacity","strokeDasharray","scale","interactive","states","create","layout","stateAnimationDuration","fontWeight","upDepth","visible","x","y","rotation","cornerRadiusBR","cornerRadiusTR","cornerRadiusBL","cornerRadiusTL","cornerRadius","textType","minRadius","maxRadius","initialFrames","centerStrength","manyBodyStrength","velocityDecay","linkWithStrength","showOnFrame","Infinity","topDepth","orientation","draggable","layoutAlgorithm","Theme","List","Template","Label","themeTags","labels","template","get","background","RoundedRectangle","dataItem","label","make","_setDataItem","events","on","series","selectDataItem","push","_defaultThemes","HierarchyDefaultTheme","new","_settings","_afterNew","_changed","isDirty","previous","_prevSettings","_disposer","event","_handleDataItem","dispose","set","children","clear","makeLabel","addTag","moveValue","Container","BreadcrumbBar","className","disabled","disableDataItem","enableDataItem","_clickDisposer","_isDragging","HierarchyNode","count","node","sum","i","length","value","hierarchy","data","Map","undefined","mapChildren","objectChildren","child","childs","n","root","Node","nodes","pop","Array","from","parent","depth","eachBefore","computeHeight","d","isArray","copyData","prototype","constructor","eachAfter","each","callback","that","index","call","next","find","sort","compare","path","end","start","ancestor","a","b","aNodes","ancestors","bNodes","c","leastCommonAncestor","k","splice","descendants","leaves","links","source","target","copy","Symbol","iterator","current","reverse","_tag","childData","setRaw","nodesContainer","fields","bulletsContainer","_prepareChildren","_valuesDirty","_treeData","first","dataItems","_makeHierarchyData","_index","_rootNode","setPrivateRaw","_updateValues","_sizeDirty","_updateVisuals","_selectDataItem","_currentDownDepth","_updateNodes","hierarchyNode","_updateNode","bullets","_makeBullets","hierarchyChildren","hierarchyChild","_dataItem","id","di","childDataItem","_getDataItemById","bullet","_handleBullets","reset","processDataItem","makeNode","_processDataItem","_makeDataItem","d3HierarchyNode","getPrivate","dataValue","updateLegendValue","d3HierarchyChild","disposeDataItem","removeValue","duration","promises","hideDataItem","hiddenState","stateAnimationEasing","easing","animate","key","to","waitForStop","hide","Promise","all","showDataItem","show","maxDepth","isHidden","applyAnimate","type","dispatch","Math","min","inited","currentDepth","_handleSingle","_zoom","bulletFunction","_makeBullet","sprite","_positionBullet","locationX","locationY","Series","Hierarchy","link","_updateLinks","_onHide","_onShow","classNames","concat","LinkedHierarchyNode","_clear","sourceNode","targetNode","_display","moveTo","lineTo","_beforeChanged","_markDirtyKey","Graphics","HierarchyLink","Circle","C","circles","outerCircles","circle","setPrivate","outerCircle","maxWidth","maxHeight","_handleRadiusChange","parentDataItem","linkDataItems","updateLinkWith","linkWith","linkWithDataItem","point","_getPoint","fill","_setDefault","sourceLinks","lnk","targetLinks","linksContainer","_processLink","_disposeLink","_handleUnlink","linked","_link","_source","_target","LinkedHierarchy","m","initialAngle","PI","sqrt","simulation","alpha","alphaMin","alphaDecay","pow","alphaTarget","forces","stepper","timer","random","s","lcg","tick","stop","iterations","forEach","force","fx","vx","fy","vy","initializeNodes","isNaN","angle","cos","sin","initializeForce","initialize","restart","_","arguments","randomSource","name","delete","dx","dy","d2","closest","tree","xm","ym","xp","yp","right","bottom","j","leaf","x0","_x0","y0","_y0","x1","_x1","y1","_y1","_x","_y","defaultX","defaultY","quadtree","Quadtree","NaN","addAll","leaf_copy","treeProto","radii","xi","yi","ri","ri2","visitAfter","prepare","visit","apply","quad","rj","l","jiggle","constant","_nodes","_random","nodeById","nodeId","Error","strengths","distances","bias","map","initializeStrength","initializeDistance","add","cover","xz","yz","floor","z","extent","x2","y2","q","x3","y3","quads","remove","retainer","removeAll","size","d3forceSimulation","_tick","updateNodePositions","_updateForces","d3ForceNode","innerWidth","innerHeight","_nodesDirty","markDirty","collisionForce","linkForce","_links","restartSimulation","_updateChildren","w","max","h","pt","pl","distanceMin2","distanceMax2","theta2","accumulate","weight","abs","distanceMin","distanceMax","theta","d3node","_clearDirty","linkDatum","getDistance","getStrength","d3Nodes","d3Node","sourceDataItem","targetDataItem","_updateRadius","valueWorking","d3Link","ForceDirected","extendBasis","B","p","enclosesWeakAll","enclosesNot","encloseBasis2","encloseBasis3","dr","enclosesWeak","encloseBasis","r1","r2","x21","y21","r21","r3","a2","a3","b2","b3","c2","c3","d1","d3","ab","xa","xb","ya","yb","A","place","intersects","score","packEnclose","array","aa","ca","sj","sk","pack","e","t","shuffle","enclose","optional","f","required","constantZero","defaultRadius","padding","radiusLeaf","packChildren","translateChild","isPrivateDirty","_updateNodesScale","packLayout","_packLayout","scaleR","animatePrivate","Pack","round","partition","positionNode","rectangles","partitionLayout","_partitionLayout","nodePadding","rectangle","scaleX","scaleY","_makeNode","levelHeight","levelWidth","Partition","Slice","slices","RadialLabel","bounds","wr","left","hr","top","ir","hs","slice","startAngle","endAngle","sliceStartAngle","arc","sliceInnerRadius","sliceRadius","innerRadius","_updateLabel","scaleDepth","Sunburst","defaultSeparation","nextLeft","v","nextRight","moveSubtree","wm","wp","shift","change","nextAncestor","vim","TreeNode","separation","nodeSize","treeRoot","firstWalk","secondWalk","sizeNode","tx","kx","ky","siblings","executeShifts","midpoint","vip","vop","vom","sip","sop","sim","som","apportion","Object","_hierarchyLayout","Tree","custom","ratio","squarify","row","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","beta","rows","i0","i1","dice","squarifyRatio","tile","paddingStack","paddingInner","treemap","paddingOuter","sums","valueOffset","valueTarget","hi","mid","valueLeft","valueRight","xk","yk","algorithm","_treemapLayout","treemapLayout","nodePaddingOuter","Treemap","am5hierarchy"],"mappings":"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","file":"hierarchy.js","sourcesContent":["import { Theme } from \"../../core/Theme\";\r\nimport { percent, p100, p50 } from \"../../core/util/Percent\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n\r\nimport * as $ease from \"../../core/util/Ease\";\r\n\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class HierarchyDefaultTheme extends Theme {\r\n\tprotected setupDefaultRules() {\r\n\t\tsuper.setupDefaultRules();\r\n\r\n\t\tconst ic = this._root.interfaceColors;\r\n\t\tconst gridLayout = this._root.gridLayout;\r\n\t\tconst r = this.rule.bind(this);\r\n\r\n\t\t/**\r\n\t\t * ========================================================================\r\n\t\t * charts/hierarchy\r\n\t\t * ========================================================================\r\n\t\t */\r\n\r\n\t\tr(\"Hierarchy\").setAll({\r\n\t\t\tlegendLabelText: \"{category}\",\r\n\t\t\tlegendValueText: \"{sum.formatNumber('#.#')}\",\r\n\t\t\twidth: p100,\r\n\t\t\theight: p100,\r\n\t\t\tcolors: ColorSet.new(this._root, { step: 2 }),\r\n\t\t\tdownDepth: 1,\r\n\t\t\tinitialDepth: 5,\r\n\t\t\tsingleBranchOnly: true,\r\n\t\t\tmaskContent: true,\r\n\t\t\tanimationEasing: $ease.out($ease.cubic)\r\n\t\t});\r\n\r\n\t\tr(\"HierarchyNode\").setAll({\r\n\t\t\ttoggleKey: \"disabled\",\r\n\t\t\tsetStateOnChildren: true,\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\tcursorOverStyle: \"pointer\",\r\n\t\t\ttooltipText: \"{category}: {sum}\"\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"hierarchy\", \"node\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tcenterX: p50,\r\n\t\t\t\tcenterY: p50,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tpaddingBottom: 1,\r\n\t\t\t\tpaddingTop: 1,\r\n\t\t\t\tpaddingRight: 4,\r\n\t\t\t\tpaddingLeft: 4,\r\n\t\t\t\ttext: \"{category}\",\r\n\t\t\t\tpopulateText: true,\r\n\t\t\t\toversizedBehavior: \"fit\",\r\n\t\t\t\tminScale: 0.3\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeText\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"HierarchyLink\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tstrokeWidth: 1,\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tstrength: 0.9,\r\n\t\t\t\tdistance: 1.1\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"Circle\", [\"linkedhierarchy\", \"shape\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tfillOpacity: 1,\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tradius: 15,\r\n\t\t\ttooltipY: 0\r\n\t\t});\r\n\r\n\t\tr(\"Circle\", [\"linkedhierarchy\", \"shape\", \"outer\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\topacity: 1,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tstrokeDasharray: 0,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tradius: 15,\r\n\t\t\tscale: 1.1,\r\n\t\t\tinteractive: false\r\n\t\t})\r\n\r\n\t\tr(\"Circle\", [\"linkedhierarchy\", \"shape\", \"outer\"]).states.create(\"disabled\", { opacity: 1, scale: 1.1, strokeDasharray: 2 });\r\n\t\tr(\"Circle\", [\"linkedhierarchy\", \"shape\", \"outer\"]).states.create(\"hoverDisabled\", { scale: 1.2, opacity: 1, strokeDasharray: 2 });\r\n\t\tr(\"Circle\", [\"linkedhierarchy\", \"shape\", \"outer\"]).states.create(\"hover\", { scale: 1.05, strokeDasharray: 0 });\r\n\t\tr(\"Circle\", [\"linkedhierarchy\", \"shape\", \"outer\"]).states.create(\"hidden\", { opacity: 0, strokeDasharray: 0 });\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/hierarchy: BreadcrumbBar\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"BreadcrumbBar\").setAll({\r\n\t\t\tpaddingLeft: 8,\r\n\t\t\tlayout: gridLayout\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"breadcrumb\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tpaddingRight: 4,\r\n\t\t\t\tpaddingLeft: 4,\r\n\t\t\t\tcursorOverStyle: \"pointer\",\r\n\t\t\t\tpopulateText: true,\r\n\t\t\t\ttext: \"{category}:\",\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButton\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"breadcrumb\"]).states.create(\"hover\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButtonHover\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"breadcrumb\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButtonDown\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"breadcrumb\", \"last\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tpopulateText: true,\r\n\t\t\t\ttext: \"{category}\",\r\n\t\t\t\tfontWeight: \"bold\",\r\n\t\t\t\tcursorOverStyle: \"default\"\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButton\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"breadcrumb\", \"label\", \"background\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"background\");\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/hierarchy: Partition\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Partition\").setAll({\r\n\t\t\tdownDepth: 1,\r\n\t\t\tupDepth: 0,\r\n\t\t\tinitialDepth: 5\r\n\t\t});\r\n\r\n\t\tr(\"HierarchyNode\", [\"partition\"]).setAll({\r\n\t\t\tsetStateOnChildren: false\r\n\t\t});\r\n\r\n\t\tr(\"HierarchyNode\", [\"partition\"]).states.create(\"hidden\", {\r\n\t\t\topacity: 1,\r\n\t\t\tvisible: true\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"partition\", \"node\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tx: p50,\r\n\t\t\t\ty: p50,\r\n\t\t\t\tcenterY: p50,\r\n\t\t\t\tcenterX: p50,\r\n\t\t\t\tpaddingBottom: 1,\r\n\t\t\t\tpaddingTop: 1,\r\n\t\t\t\tpaddingLeft: 1,\r\n\t\t\t\tpaddingRight: 1,\r\n\t\t\t\trotation: 90,\r\n\t\t\t\tpopulateText: true,\r\n\t\t\t\ttext: \"{category}\",\r\n\t\t\t\toversizedBehavior: \"fit\",\r\n\t\t\t\tminScale: 0.4\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeText\");\r\n\t\t}\r\n\r\n\t\tr(\"Label\", [\"horizontal\", \"partition\", \"node\"]).setAll({\r\n\t\t\trotation: 0\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"partition\", \"node\", \"shape\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tstrokeWidth: 1,\r\n\t\t\t\tcornerRadiusBR: 0,\r\n\t\t\t\tcornerRadiusTR: 0,\r\n\t\t\t\tcornerRadiusBL: 0,\r\n\t\t\t\tcornerRadiusTL: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"background\");\r\n\t\t}\r\n\r\n\t\tr(\"RoundedRectangle\", [\"partition\", \"node\", \"shape\", \"last\"]).setAll({\r\n\t\t\tfillOpacity: 0.75\r\n\t\t});\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/hierarchy: Sunburst\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Sunburst\").setAll({\r\n\t\t\tsingleBranchOnly: true\r\n\t\t});\r\n\r\n\t\tr(\"HierarchyNode\", [\"sunburst\"]).setAll({\r\n\t\t\tsetStateOnChildren: false\r\n\t\t});\r\n\r\n\t\tr(\"HierarchyNode\", [\"sunburst\"]).states.create(\"hidden\", {\r\n\t\t\topacity: 0,\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Slice\", [\"sunburst\", \"node\", \"shape\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tstrokeWidth: 1,\r\n\t\t\t\tcornerRadius: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"background\");\r\n\t\t}\r\n\r\n\t\tr(\"Slice\", [\"sunburst\", \"node\", \"shape\", \"last\"]).setAll({\r\n\t\t\tfillOpacity: 0.75\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"RadialLabel\", [\"sunburst\", \"node\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\ttextType: \"radial\",\r\n\t\t\t\tpaddingBottom: 1,\r\n\t\t\t\tpaddingTop: 1,\r\n\t\t\t\tpaddingLeft: 1,\r\n\t\t\t\tpaddingRight: 1,\r\n\t\t\t\tcenterX: p50,\r\n\t\t\t\tpopulateText: true,\r\n\t\t\t\ttext: \"{category}\",\r\n\t\t\t\toversizedBehavior: \"fit\",\r\n\t\t\t\tminScale: 0.4\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeText\");\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/hierarchy: ForceDirected\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"ForceDirected\").setAll({\r\n\t\t\tminRadius: percent(1),\r\n\t\t\tmaxRadius: percent(8),\r\n\t\t\tinitialFrames: 500,\r\n\t\t\tcenterStrength: 0.8,\r\n\t\t\tmanyBodyStrength: -14,\r\n\t\t\tvelocityDecay: 0.5,\r\n\t\t\tlinkWithStrength: 0.5,\r\n\t\t\tshowOnFrame: 10,\r\n\t\t\tsingleBranchOnly: false,\r\n\t\t\tupDepth: Infinity,\r\n\t\t\tdownDepth: 1,\r\n\t\t\tinitialDepth: 5,\r\n\t\t\ttopDepth: 0\r\n\t\t});\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/hierarchy: Tree\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Tree\").setAll({\r\n\t\t\torientation: \"vertical\",\r\n\t\t\tpaddingLeft: 20,\r\n\t\t\tpaddingRight: 20,\r\n\t\t\tpaddingTop: 20,\r\n\t\t\tpaddingBottom: 20,\r\n\t\t\tsingleBranchOnly: false,\r\n\t\t\tupDepth: Infinity,\r\n\t\t\tdownDepth: 1,\r\n\t\t\tinitialDepth: 5,\r\n\t\t\ttopDepth: 0\r\n\t\t});\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/hierarchy: Pack\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Pack\").setAll({\r\n\t\t\tpaddingLeft: 20,\r\n\t\t\tpaddingTop: 20,\r\n\t\t\tpaddingBottom: 20,\r\n\t\t\tpaddingRight: 20\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"pack\", \"node\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tcenterY: p50,\r\n\t\t\t\tcenterX: p50,\r\n\t\t\t\tpaddingBottom: 1,\r\n\t\t\t\tpaddingTop: 1,\r\n\t\t\t\tpaddingLeft: 1,\r\n\t\t\t\tpaddingRight: 1,\r\n\t\t\t\tpopulateText: true,\r\n\t\t\t\ttext: \"{category}\",\r\n\t\t\t\toversizedBehavior: \"fit\",\r\n\t\t\t\tminScale: 0.4\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeText\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Circle\", [\"pack\", \"node\", \"shape\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0.5,\r\n\t\t\t\tfillOpacity: 0.8,\r\n\t\t\t\tstrokeWidth: 1,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"background\");\r\n\t\t}\r\n\r\n\r\n\t\tr(\"LinkedHierarchyNode\").setAll({\r\n\t\t\tdraggable: true\r\n\t\t});\r\n\r\n\t\tr(\"LinkedHierarchyNode\").states.create(\"hidden\", { scale: 0, opacity: 0, visible: false });\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/hierarchy: Treemap\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Treemap\").setAll({\r\n\t\t\tupDepth: 0,\r\n\t\t\tlayoutAlgorithm: \"squarify\"\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"treemap\", \"node\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tx: p50,\r\n\t\t\t\ty: p50,\r\n\t\t\t\tcenterY: p50,\r\n\t\t\t\tcenterX: p50,\r\n\t\t\t\tpaddingBottom: 1,\r\n\t\t\t\tpaddingTop: 1,\r\n\t\t\t\tpaddingLeft: 1,\r\n\t\t\t\tpaddingRight: 1,\r\n\t\t\t\tpopulateText: true,\r\n\t\t\t\ttext: \"{category}\",\r\n\t\t\t\toversizedBehavior: \"fit\",\r\n\t\t\t\tminScale: 0.4\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeText\");\r\n\t\t}\r\n\r\n\t\tr(\"HierarchyNode\", [\"treemap\", \"node\"]).setAll({\r\n\t\t\ttooltipY: percent(40),\r\n\t\t\tisMeasured: false,\r\n\t\t\tposition: \"absolute\"\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"treemap\", \"node\", \"shape\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tstrokeWidth: 1,\r\n\t\t\t\tcornerRadiusBR: 0,\r\n\t\t\t\tcornerRadiusTR: 0,\r\n\t\t\t\tcornerRadiusBL: 0,\r\n\t\t\t\tcornerRadiusTL: 0,\r\n\t\t\t\tfillOpacity: 1\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"background\");\r\n\t\t}\r\n\r\n\r\n\t}\r\n}\r\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { IDisposer } from \"../../core/util/Disposer\";\nimport type { Hierarchy, IHierarchyDataItem } from \"./Hierarchy\";\n\nimport { HierarchyDefaultTheme } from \"./HierarchyDefaultTheme\";\nimport { Container, IContainerPrivate, IContainerSettings, IContainerEvents } from \"../../core/render/Container\";\nimport { Label } from \"../../core/render/Label\";\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\n\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IBreadcrumbBarSettings extends IContainerSettings {\n\n\t/**\n\t * A hierarchy series bar will use to build current selection path.\n\t */\n\tseries: Hierarchy;\n\n}\n\nexport interface IBreadcrumbBarPrivate extends IContainerPrivate {\n}\n\nexport interface IBreadcrumbBarEvents extends IContainerEvents {\n}\n\n/**\n * Creates a breadcrumb navigation control.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/breadcrumbs/} for more info\n * @important\n */\nexport class BreadcrumbBar extends Container {\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLabel(dataItem: DataItem<IHierarchyDataItem>): Label {\n\t\tconst label = this.labels.make();\n\t\tlabel._setDataItem(dataItem);\n\t\tlabel.states.create(\"hover\", {});\n\t\tlabel.states.create(\"down\", {});\n\t\tlabel.events.on(\"click\", () => {\n\t\t\tconst series = this.get(\"series\");\n\t\t\tif (series) {\n\t\t\t\tseries.selectDataItem(dataItem);\n\t\t\t}\n\t\t});\n\n\t\tthis.labels.push(label);\n\n\t\treturn label;\n\t}\n\n\t/**\n\t * A list of labels in the bar.\n\t *\n\t * `labels.template` can be used to configure label apperance and behavior.\n\t *\n\t * @default new ListTemplate<Label>\n\t */\n\tpublic readonly labels: ListTemplate<Label> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Label._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), [\"label\"]),\n\t\t\tbackground: RoundedRectangle.new(this._root, {\n\t\t\t\tthemeTags: [\"background\"]\n\t\t\t})\n\t\t}, [this.labels.template])\n\t);\n\n\tpublic static className: string = \"BreadcrumbBar\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([BreadcrumbBar.className]);\n\n\tdeclare public _settings: IBreadcrumbBarSettings;\n\tdeclare public _privateSettings: IBreadcrumbBarPrivate;\n\tdeclare public _events: IBreadcrumbBarEvents;\n\n\tprotected _disposer: IDisposer | undefined;\n\n\tprotected _afterNew() {\n\t\tthis._defaultThemes.push(HierarchyDefaultTheme.new(this._root));\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"breadcrumb\"]);\n\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\t\tif (this.isDirty(\"series\")) {\n\t\t\tconst series = this.get(\"series\");\n\t\t\tconst previous = this._prevSettings.series;\n\t\t\tif (series != previous) {\n\t\t\t\tthis._disposer = series.events.on(\"dataitemselected\", (event) => {\n\t\t\t\t\tthis._handleDataItem(event.dataItem)\n\t\t\t\t})\n\t\t\t}\n\t\t\telse if (previous) {\n\t\t\t\tif (this._disposer) {\n\t\t\t\t\tthis._disposer.dispose();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._handleDataItem(series.get(\"selectedDataItem\"));\n\t\t}\n\t}\n\n\tprotected _handleDataItem(dataItem: DataItem<IHierarchyDataItem> | undefined) {\n\t\tthis.set(\"minHeight\", this.height());\n\t\tthis.children.clear();\n\t\tthis.labels.clear();\n\n\t\tif (dataItem) {\n\t\t\tlet parent = dataItem;\n\n\t\t\twhile (parent) {\n\t\t\t\tlet label = this.makeLabel(parent);\n\t\t\t\tif (parent == dataItem) {\n\t\t\t\t\tlabel.addTag(\"last\");\n\t\t\t\t}\n\t\t\t\tthis.children.moveValue(label, 0);\n\t\t\t\tparent = parent.get(\"parent\");\n\t\t\t}\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { IDisposer } from \"../../core/util/Disposer\";\nimport type { Hierarchy, IHierarchyDataItem } from \"./Hierarchy\";\n\nimport { Container, IContainerPrivate, IContainerSettings } from \"../../core/render/Container\";\n\nexport interface IHierarchyNodeSettings extends IContainerSettings {\n}\n\nexport interface IHierarchyNodePrivate extends IContainerPrivate {\n}\n\n/**\n * Base class for hierarchy nodes.\n */\nexport class HierarchyNode extends Container {\n\n\t/**\n\t * Related series.\n\t */\n\tpublic series: Hierarchy | undefined;\n\n\tdeclare public _settings: IHierarchyNodeSettings;\n\tdeclare public _privateSettings: IHierarchyNodePrivate;\n\n\tpublic static className: string = \"HierarchyNode\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([HierarchyNode.className]);\n\n\tdeclare protected _dataItem: DataItem<IHierarchyDataItem> | undefined;\n\n\tprotected _clickDisposer: IDisposer | undefined;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.states.create(\"disabled\", {});\n\t\tthis.states.create(\"hover\", {});\n\t\tthis.states.create(\"hoverDisabled\", {});\n\n\t\tthis.on(\"disabled\", () => {\n\t\t\tconst dataItem = this.dataItem as DataItem<IHierarchyDataItem>;\n\t\t\tif (!dataItem.get(\"children\")) {\n\t\t\t\tthis.set(\"disabled\", true);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst disabled = this.get(\"disabled\");\n\t\t\tconst series = this.series;\n\n\t\t\tif (dataItem && series) {\n\t\t\t\tif (dataItem.get(\"disabled\") != disabled) {\n\t\t\t\t\tif (disabled) {\n\t\t\t\t\t\tseries.disableDataItem(dataItem);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tseries.enableDataItem(dataItem, series.get(\"downDepth\", 1), 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this.isDirty(\"toggleKey\")) {\n\t\t\tconst toggleKey = this.get(\"toggleKey\");\n\n\t\t\tif (toggleKey == \"disabled\") {\n\t\t\t\tthis._clickDisposer = this.events.on(\"click\", () => {\n\t\t\t\t\tif (!this._isDragging) {\n\t\t\t\t\t\tlet series = this.series;\n\t\t\t\t\t\tif (series) {\n\t\t\t\t\t\t\tseries.selectDataItem(this.dataItem as DataItem<IHierarchyDataItem>);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this._clickDisposer) {\n\t\t\t\t\tthis._clickDisposer.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nexport default function() {\n  return this.eachAfter(count);\n}\n","import node_count from \"./count.js\";\nimport node_each from \"./each.js\";\nimport node_eachBefore from \"./eachBefore.js\";\nimport node_eachAfter from \"./eachAfter.js\";\nimport node_find from \"./find.js\";\nimport node_sum from \"./sum.js\";\nimport node_sort from \"./sort.js\";\nimport node_path from \"./path.js\";\nimport node_ancestors from \"./ancestors.js\";\nimport node_descendants from \"./descendants.js\";\nimport node_leaves from \"./leaves.js\";\nimport node_links from \"./links.js\";\nimport node_iterator from \"./iterator.js\";\n\nexport default function hierarchy(data, children) {\n  if (data instanceof Map) {\n    data = [undefined, data];\n    if (children === undefined) children = mapChildren;\n  } else if (children === undefined) {\n    children = objectChildren;\n  }\n\n  var root = new Node(data),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if ((childs = children(node.data)) && (n = (childs = Array.from(childs)).length)) {\n      node.children = childs;\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = childs[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction objectChildren(d) {\n  return d.children;\n}\n\nfunction mapChildren(d) {\n  return Array.isArray(d) ? d[1] : null;\n}\n\nfunction copyData(node) {\n  if (node.data.value !== undefined) node.value = node.data.value;\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nexport function Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  find: node_find,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy,\n  [Symbol.iterator]: node_iterator\n};\n","export default function(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n","export default function(callback, that) {\n  var node = this, nodes = [node], next = [], children, i, n, index = -1;\n  while (node = nodes.pop()) {\n    next.push(node);\n    if (children = node.children) {\n      for (i = 0, n = children.length; i < n; ++i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  while (node = next.pop()) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n","export default function(callback, that) {\n  var node = this, nodes = [node], children, i, index = -1;\n  while (node = nodes.pop()) {\n    callback.call(that, node, ++index, this);\n    if (children = node.children) {\n      for (i = children.length - 1; i >= 0; --i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  return this;\n}\n","export default function(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    if (callback.call(that, node, ++index, this)) {\n      return node;\n    }\n  }\n}\n","export default function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n","export default function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n","export default function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n","export default function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n","export default function() {\n  return Array.from(this);\n}\n","export default function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n","export default function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n","export default function*() {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      yield node;\n      if (children = node.children) {\n        for (i = 0, n = children.length; i < n; ++i) {\n          next.push(children[i]);\n        }\n      }\n    }\n  } while (next.length);\n}\n","import type { Color } from \"../../core/util/Color\";\nimport type { ColorSet } from \"../../core/util/ColorSet\";\nimport type { Bullet } from \"../../core/render/Bullet\";\nimport type { Root } from \"../../core/Root\";\nimport type { Easing } from \"../../core/util/Ease\";\n\nimport { HierarchyDefaultTheme } from \"./HierarchyDefaultTheme\";\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"../../core/render/Series\";\nimport { DataItem } from \"../../core/render/Component\";\nimport { HierarchyNode } from \"./HierarchyNode\";\nimport { Container } from \"../../core/render/Container\";\nimport { Label } from \"../../core/render/Label\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as d3hierarchy from \"d3-hierarchy\";\n\n/**\n * @ignore\n */\nexport interface IHierarchyDataObject {\n\tname?: string,\n\tvalue?: number,\n\tchildren?: IHierarchyDataObject[],\n\tdataItem?: DataItem<IHierarchyDataItem>\n\tcustomValue?: boolean;\n};\n\nexport interface IHierarchyDataItem extends ISeriesDataItem {\n\tvalue: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvalueWorking: number;\n\n\tvaluePercentTotal: number;\n\tsum: number;\n\tcategory: string;\n\tchildren: Array<DataItem<IHierarchyDataItem>>;\n\tchildData: Array<any>\n\tparent: DataItem<IHierarchyDataItem>;\n\tdepth: number;\n\tnode: HierarchyNode;\n\tlabel: Label;\n\tfill: Color;\n\tdisabled: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\td3HierarchyNode: d3hierarchy.HierarchyNode<IHierarchyDataObject>;\n}\n\nexport interface IHierarchySettings extends ISeriesSettings {\n\t/**\n\t * How to sort nodes by their value.\n\t *\n\t * @default \"none\"\n\t */\n\tsort?: \"ascending\" | \"descending\" | \"none\"\n\n\n\t/**\n\t * A field in data that holds numeric value for the node.\n\t */\n\tvalueField?: string;\n\n\t/**\n\t * A field in data that holds string-based identificator for node.\n\t */\n\tcategoryField?: string;\n\n\t/**\n\t * A field in data that holds an array of child node data.\n\t */\n\tchildDataField?: string;\n\n\t/**\n\t * A field in data that holds boolean value indicating if node is\n\t * disabled (collapsed).\n\t */\n\tdisabledField?: string;\n\n\t/**\n\t * A field in data that holds color used for fills for various elements, such\n\t * as nodes.\n\t */\n\tfillField?: string;\n\n\t/**\n\t * A [[ColorSet]] to use when asigning colors for nodes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/#Node_colors} for more info\n\t */\n\tcolors?: ColorSet;\n\n\t/**\n\t * Number of child levels to open when clicking on a node.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/#Drill_down} for more info\n\t */\n\tdownDepth?: number;\n\n\t/**\n\t * Number of levels parent levels to show from currently selected node.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/#Drill_down} for more info\n\t */\n\tupDepth?: number;\n\n\t/**\n\t * Number of levels to show on chart's first load.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/#Tree_depth} for more info\n\t */\n\tinitialDepth?: number;\n\n\t/**\n\t * If set, will show nodes starting from set level.\n\t *\n\t * It could be used to eliminate top level branches, that do not need to be\n\t * shown.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/#Tree_depth} for more info\n\t */\n\ttopDepth?: number;\n\n\t/**\n\t * If set to `true` will make all other branches collapse when some branch is\n\t * expanded.\n\t */\n\tsingleBranchOnly?: boolean;\n\n\t/**\n\t * A data item for currently selected node.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/#Pre_selected_branch} for more info\n\t */\n\tselectedDataItem?: DataItem<IHierarchyDataItem>;\n\n\t/**\n\t * Duration for all drill animations in milliseconds.\n\t */\n\tanimationDuration?: number;\n\n\t/**\n\t * An easing function to use for drill animations.\n\t */\n\tanimationEasing?: Easing;\n\n}\n\nexport interface IHierarchyPrivate extends ISeriesPrivate {\n\n\t/**\n\t * Level count in series.\n\t */\n\tmaxDepth: number;\n\n}\n\nexport interface IHierarchyEvents extends ISeriesEvents {\n\tdataitemselected: {\n\t\tdataItem?: DataItem<IHierarchyDataItem>\n\t};\n}\n\n/**\n * A base class for all hierarchy charts.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/} for more info\n */\nexport abstract class Hierarchy extends Series {\n\tpublic static className: string = \"Hierarchy\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([Hierarchy.className]);\n\n\tdeclare public _settings: IHierarchySettings;\n\tdeclare public _privateSettings: IHierarchyPrivate;\n\tdeclare public _dataItemSettings: IHierarchyDataItem;\n\tdeclare public _events: IHierarchyEvents;\n\n\t/**\n\t * A [[Container]] that nodes are placed in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly nodesContainer = this.children.push(Container.new(this._root, { isMeasured: false }));\n\n\tpublic _rootNode: d3hierarchy.HierarchyNode<IHierarchyDataObject> | undefined;\n\n\tpublic _treeData: IHierarchyDataObject | undefined;\n\n\tprotected _index: number = 0;\n\n\tprotected _tag: string = \"hierarchy\";\n\n\t/**\n\t * A list of nodes in a [[Hierarchy]] chart.\n\t *\n\t * @default new ListTemplate<HierarchyNode>\n\t */\n\tpublic readonly nodes: ListTemplate<HierarchyNode> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => HierarchyNode.new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.nodes.template.get(\"themeTags\", []), [this._tag, \"hierarchy\", \"node\"])\n\t\t}, this.nodes.template)\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>): HierarchyNode {\n\n\t\tconst childData = dataItem.get(\"childData\");\n\n\t\tconst node = this.nodes.make();\n\t\tnode.series = this;\n\t\tnode._setDataItem(dataItem);\n\t\tthis.nodes.push(node);\n\t\tdataItem.setRaw(\"node\", node);\n\n\t\tconst label = this.labels.make();\n\t\tlabel._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"label\", label);\n\t\tthis.labels.push(label);\n\n\t\tif (!childData || childData.length == 0) {\n\t\t\tnode.addTag(\"last\");\n\t\t}\n\n\t\tconst depth = dataItem.get(\"depth\");\n\t\tnode.addTag(\"depth\" + depth);\n\n\t\tthis.nodesContainer.children.push(node);\n\t\tnode.children.push(label);\n\n\t\treturn node;\n\t}\n\n\t/**\n\t * A list of label elements in a [[Hierarchy]] chart.\n\t *\n\t * @default new ListTemplate<Label>\n\t */\n\tpublic readonly labels: ListTemplate<Label> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Label.new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), [this._tag])\n\t\t}, this.labels.template)\n\t);\n\n\tpublic _currentDownDepth: number | undefined;\n\n\tprotected _afterNew() {\n\t\tthis._defaultThemes.push(HierarchyDefaultTheme.new(this._root));\n\t\tthis.fields.push(\"category\", \"childData\", \"disabled\", \"fill\");\n\n\t\tthis.children.push(this.bulletsContainer);\n\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this._valuesDirty) {\n\t\t\tthis._treeData = {};\n\n\t\t\tconst first = this.dataItems[0];\n\t\t\tif (first) {\n\t\t\t\tthis._makeHierarchyData(this._treeData, first);\n\t\t\t\tthis._index = 0;\n\t\t\t\tthis._rootNode = (d3hierarchy.hierarchy(this._treeData) as any);\n\t\t\t\tif (this._rootNode) {\n\t\t\t\t\tthis._rootNode.sum((d) => {\n\t\t\t\t\t\treturn d.value as any;\n\t\t\t\t\t});\n\t\t\t\t\tconst sort = this.get(\"sort\")\n\t\t\t\t\tif (sort == \"descending\") {\n\t\t\t\t\t\tthis._rootNode.sort((a, b) => (b.value as any) - (a.value as any));\n\t\t\t\t\t}\n\t\t\t\t\telse if (sort == \"ascending\") {\n\t\t\t\t\t\tthis._rootNode.sort((a, b) => (a.value as any) - (b.value as any));\n\t\t\t\t\t}\n\t\t\t\t\tthis.setPrivateRaw(\"valueLow\", Infinity);\n\t\t\t\t\tthis.setPrivateRaw(\"valueHigh\", -Infinity);\n\t\t\t\t\tthis.setPrivateRaw(\"maxDepth\", 0);\n\t\t\t\t\tthis._updateValues(this._rootNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._valuesDirty || this._sizeDirty) {\n\t\t\tthis._updateVisuals();\n\t\t}\n\n\t\tif (this._sizeDirty) {\n\t\t\tthis._selectDataItem(this.get(\"selectedDataItem\"), this._currentDownDepth);\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\t\tif (this.isDirty(\"selectedDataItem\")) {\n\t\t\tthis._selectDataItem(this.get(\"selectedDataItem\"));\n\t\t}\n\t}\n\n\tprotected _updateVisuals() {\n\t\tif (this._rootNode) {\n\t\t\tthis._updateNodes(this._rootNode);\n\t\t}\n\t}\n\n\tprotected _updateNodes(hierarchyNode: d3hierarchy.HierarchyNode<IHierarchyDataObject>) {\n\t\tconst dataItem = hierarchyNode.data.dataItem;\n\n\t\tif (dataItem) {\n\t\t\tthis._updateNode(dataItem);\n\n\t\t\tif (this.bullets.length > 0 && !dataItem.bullets) {\n\t\t\t\tthis._makeBullets(dataItem);\n\t\t\t}\n\n\t\t\tconst hierarchyChildren = hierarchyNode.children;\n\t\t\tif (hierarchyChildren) {\n\t\t\t\t$array.each(hierarchyChildren, (hierarchyChild) => {\n\t\t\t\t\tthis._updateNodes(hierarchyChild)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateNode(_dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t}\n\n\tpublic _getDataItemById(dataItems: Array<DataItem<this[\"_dataItemSettings\"]>>, id: string): DataItem<this[\"_dataItemSettings\"]> | undefined {\n\n\t\tlet di: DataItem<this[\"_dataItemSettings\"]> | undefined;\n\n\t\t$array.each(dataItems, (dataItem: any) => {\n\n\t\t\tif (dataItem.get(\"id\") == id) {\n\t\t\t\tdi = dataItem;\n\t\t\t}\n\n\t\t\tconst children = dataItem.get(\"children\");\n\t\t\tif (children) {\n\t\t\t\tlet childDataItem = this._getDataItemById(children, id);\n\t\t\t\tif (childDataItem) {\n\t\t\t\t\tdi = childDataItem\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\treturn di;\n\t}\n\n\tprotected _handleBullets(dataItems: Array<DataItem<this[\"_dataItemSettings\"]>>) {\n\t\t$array.each(dataItems, (dataItem) => {\n\t\t\tconst bullets = dataItem.bullets;\n\t\t\tif (bullets) {\n\t\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\t\tbullet.dispose();\n\t\t\t\t})\n\t\t\t\tdataItem.bullets = undefined;\n\t\t\t}\n\n\t\t\tconst children = dataItem.get(\"children\");\n\n\t\t\tif (children) {\n\t\t\t\tthis._handleBullets(children);\n\t\t\t}\n\t\t})\n\n\t\tthis._updateVisuals();\n\t}\n\n\tprotected _onDataClear() {\n\t\tconst colors = this.get(\"colors\");\n\t\tif (colors) {\n\t\t\tcolors.reset();\n\t\t}\n\t}\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.processDataItem(dataItem);\n\n\t\tconst childData = dataItem.get(\"childData\");\n\t\tconst colors = this.get(\"colors\");\n\t\tconst topDepth = this.get(\"topDepth\", 0);\n\n\t\tif (!dataItem.get(\"parent\")) {\n\t\t\tdataItem.setRaw(\"depth\", 0);\n\t\t\tif (colors && topDepth == 0 && dataItem.get(\"fill\") == null) {\n\t\t\t\tdataItem.setRaw(\"fill\", colors.next());\n\t\t\t}\n\t\t}\n\n\t\tlet depth = dataItem.get(\"depth\");\n\t\tconst initialDepth = this.get(\"initialDepth\", 1);\n\n\t\tthis.makeNode(dataItem);\n\t\tthis._processDataItem(dataItem);\n\n\t\tif (childData) {\n\t\t\tconst children: Array<DataItem<this[\"_dataItemSettings\"]>> = [];\n\t\t\tdataItem.setRaw(\"children\", children);\n\n\t\t\t$array.each(childData, (child) => {\n\t\t\t\tconst childDataItem = new DataItem(this, child, this._makeDataItem(child));\n\n\t\t\t\tchildren.push(childDataItem);\n\n\t\t\t\tchildDataItem.setRaw(\"parent\", dataItem);\n\t\t\t\tchildDataItem.setRaw(\"depth\", depth + 1);\n\n\t\t\t\tif (this.dataItems.length == 1 && depth == 0) {\n\t\t\t\t\tif (colors && childDataItem.get(\"fill\") == null) {\n\t\t\t\t\t\tchildDataItem.setRaw(\"fill\", colors.next());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tchildDataItem.setRaw(\"fill\", dataItem.get(\"fill\"));\n\t\t\t\t}\n\n\t\t\t\tthis.processDataItem(childDataItem);\n\t\t\t})\n\t\t}\n\n\t\tconst children = dataItem.get(\"children\");\n\t\tif (!children || children.length == 0) {\n\t\t\tconst node = dataItem.get(\"node\");\n\t\t\tnode.setAll({ toggleKey: undefined, cursorOverStyle: \"default\" });\n\t\t}\n\n\t\tif (dataItem.get(\"disabled\") == null) {\n\t\t\tif (depth >= topDepth + initialDepth) {\n\t\t\t\tthis.disableDataItem(dataItem, 0);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _processDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t}\n\n\tprotected _updateValues(d3HierarchyNode: d3hierarchy.HierarchyNode<IHierarchyDataObject>) {\n\t\tconst dataItem = d3HierarchyNode.data.dataItem;\n\n\t\tif (d3HierarchyNode.depth > this.getPrivate(\"maxDepth\")) {\n\t\t\tthis.setPrivateRaw(\"maxDepth\", d3HierarchyNode.depth);\n\t\t}\n\n\t\tif (dataItem) {\n\t\t\tdataItem.setRaw(\"d3HierarchyNode\", d3HierarchyNode);\n\n\t\t\t(d3HierarchyNode as any).index = this._index;\n\n\t\t\tthis._index++;\n\n\t\t\tdataItem.get(\"node\").set(\"disabled\", dataItem.get(\"disabled\"));\n\n\t\t\tlet dataValue = d3HierarchyNode.data.value;\n\t\t\tlet value = d3HierarchyNode.value\n\n\t\t\tif (dataValue != null) {\n\t\t\t\tvalue = dataValue;\n\t\t\t\t(d3HierarchyNode as any)[\"value\"] = value;\n\t\t\t}\n\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tdataItem.setRaw(\"sum\", value);\n\n\t\t\t\tif (this.getPrivate(\"valueLow\") > value) {\n\t\t\t\t\tthis.setPrivateRaw(\"valueLow\", value);\n\t\t\t\t}\n\n\t\t\t\tif (this.getPrivate(\"valueHigh\") < value) {\n\t\t\t\t\tthis.setPrivateRaw(\"valueHigh\", value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.updateLegendValue(dataItem);\n\t\t}\n\n\t\tconst hierarchyChildren = d3HierarchyNode.children;\n\t\tif (hierarchyChildren) {\n\t\t\t$array.each(hierarchyChildren, (d3HierarchyChild) => {\n\t\t\t\tthis._updateValues(d3HierarchyChild);\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _makeHierarchyData(data: IHierarchyDataObject, dataItem: DataItem<IHierarchyDataItem>) {\n\t\tdata.dataItem = dataItem;\n\n\t\tconst children = dataItem.get(\"children\");\n\t\tif (children) {\n\t\t\tconst childrenDataArray: Array<IHierarchyDataObject> = [];\n\t\t\tdata.children = childrenDataArray;\n\t\t\t$array.each(children, (childDataItem) => {\n\t\t\t\tconst childData = {};\n\t\t\t\tchildrenDataArray.push(childData);\n\t\t\t\tthis._makeHierarchyData(childData, childDataItem);\n\t\t\t})\n\n\t\t\tconst value = dataItem.get(\"valueWorking\");\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tdata.value = value;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconst value = dataItem.get(\"valueWorking\");\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tdata.value = value;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst node = dataItem.get(\"node\");\n\t\tif (node) {\n\t\t\tthis.nodes.removeValue(node);\n\t\t\tnode.dispose();\n\t\t}\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\tthis.labels.removeValue(label);\n\t\t\tlabel.dispose();\n\t\t}\n\n\t\tconst children = dataItem.get(\"children\");\n\t\tif (children) {\n\t\t\t$array.each(children, (child) => {\n\t\t\t\tthis.disposeDataItem(child);\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Hides hierarchy's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\n\t\tconst hiddenState = this.states.create(\"hidden\", {})\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tconst stateAnimationDuration = \"stateAnimationDuration\"\n\t\t\tduration = hiddenState.get(stateAnimationDuration, this.get(stateAnimationDuration, 0));\n\t\t}\n\n\t\tconst stateAnimationEasing = \"stateAnimationEasing\";\n\t\tconst easing = hiddenState.get(stateAnimationEasing, this.get(stateAnimationEasing));\n\n\t\tconst children = dataItem.get(\"children\");\n\n\t\tif ((!children || children.length == 0) && $type.isNumber(dataItem.get(\"value\"))) {\n\t\t\tpromises.push(dataItem.animate({ key: \"valueWorking\" as any, to: 0, duration: duration, easing: easing }).waitForStop());\n\t\t}\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tnode.hide();\n\n\t\tif (children) {\n\t\t\t$array.each(children, (childDataItem) => {\n\t\t\t\tpromises.push(this.hideDataItem(childDataItem));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Shows hierarchy's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = this.get(\"stateAnimationDuration\", 0);\n\t\t}\n\n\t\tconst easing = this.get(\"stateAnimationEasing\");\n\n\t\tconst children = dataItem.get(\"children\");\n\n\t\tif ((!children || children.length == 0) && $type.isNumber(dataItem.get(\"value\"))) {\n\t\t\tpromises.push(dataItem.animate({ key: \"valueWorking\" as any, to: dataItem.get(\"value\"), duration: duration, easing: easing }).waitForStop());\n\t\t}\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tnode.show();\n\n\t\tif (children) {\n\t\t\t$array.each(children, (childDataItem) => {\n\t\t\t\tpromises.push(this.showDataItem(childDataItem));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Enables a disabled data item.\n\t *\n\t * @param  dataItem  Target data item\n\t * @param  duration  Animation duration in milliseconds\n\t */\n\tpublic enableDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, maxDepth?: number, depth?: number, duration?: number) {\n\n\t\tif (depth == null) {\n\t\t\tdepth = 0;\n\t\t}\n\n\t\tif (maxDepth == null) {\n\t\t\tmaxDepth = 1;\n\t\t}\n\n\t\tdataItem.set(\"disabled\", false);\n\t\tdataItem.get(\"node\").set(\"disabled\", false);\n\n\t\tif (!dataItem.isHidden()) {\n\t\t\tdataItem.get(\"node\").show(duration);\n\t\t}\n\n\t\tif (depth == 0) {\n\t\t\tconst upDepth = this.get(\"upDepth\", Infinity);\n\t\t\tlet parent = dataItem;\n\t\t\tlet count = 0;\n\n\t\t\twhile (parent !== undefined) {\n\t\t\t\tif (count > upDepth) {\n\t\t\t\t\tparent.get(\"node\").hide();\n\t\t\t\t}\n\t\t\t\tparent = parent.get(\"parent\");\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\n\t\tlet children = dataItem.get(\"children\");\n\t\tif (children) {\n\t\t\tif (depth < maxDepth - 1) {\n\t\t\t\t$array.each(children, (child) => {\n\t\t\t\t\tthis.enableDataItem(child, maxDepth, depth as number + 1, duration);\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$array.each(children, (child) => {\n\t\t\t\t\tif (!child.isHidden()) {\n\t\t\t\t\t\tchild.get(\"node\").show(duration);\n\t\t\t\t\t\tchild.get(\"node\").states.applyAnimate(\"disabled\");\n\t\t\t\t\t\tchild.set(\"disabled\", true);\n\n\t\t\t\t\t\tthis.disableDataItem(child);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Disables a data item.\n\t *\n\t * @param  dataItem  Target data item\n\t * @param  duration  Animation duration in milliseconds\n\t */\n\tpublic disableDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number) {\n\t\tdataItem.set(\"disabled\", true);\n\t\tlet children = dataItem.get(\"children\");\n\t\tif (children) {\n\t\t\t$array.each(children, (child) => {\n\t\t\t\tthis.disableDataItem(child, duration);\n\t\t\t\tchild.get(\"node\").hide(duration);\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _selectDataItem(dataItem?: DataItem<this[\"_dataItemSettings\"]>, downDepth?: number) {\n\t\tif (dataItem) {\n\t\t\tconst type = \"dataitemselected\";\n\t\t\tthis.events.dispatch(type, { type: type, target: this, dataItem: dataItem });\n\n\t\t\tlet maxDepth = this.getPrivate(\"maxDepth\", 1);\n\t\t\tconst topDepth = this.get(\"topDepth\", 0);\n\n\t\t\tif (downDepth == null) {\n\t\t\t\tdownDepth = Math.min(this.get(\"downDepth\", 1), maxDepth - dataItem.get(\"depth\"));\n\t\t\t}\n\n\t\t\tif (!this.inited) {\n\t\t\t\tdownDepth = Math.min(this.get(\"initialDepth\", 1), maxDepth - topDepth);\n\t\t\t}\n\n\t\t\tthis._currentDownDepth = downDepth;\n\n\t\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\t\t\tlet currentDepth = hierarchyNode.depth;\n\n\t\t\tif (currentDepth + downDepth > maxDepth) {\n\t\t\t\tdownDepth = maxDepth - currentDepth;\n\t\t\t}\n\n\t\t\tif (currentDepth < topDepth) {\n\t\t\t\tdownDepth += topDepth - currentDepth;\n\t\t\t\tcurrentDepth = topDepth;\n\t\t\t}\n\n\t\t\tconst children = dataItem.get(\"children\");\n\n\t\t\tif (children && children.length > 0) {\n\t\t\t\tif (downDepth > 0) {\n\t\t\t\t\tthis.enableDataItem(dataItem, downDepth);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem.get(\"node\").show();\n\t\t\t\t\t$array.each(children, (child) => {\n\t\t\t\t\t\tchild.get(\"node\").hide();\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif (hierarchyNode.depth < topDepth) {\n\t\t\t\t\tdataItem.get(\"node\").hide(0);\n\t\t\t\t}\n\n\t\t\t\tif (this.get(\"singleBranchOnly\")) {\n\t\t\t\t\tthis._handleSingle(dataItem);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.enableDataItem(this.dataItems[0], downDepth, 0);\n\t\t\t}\n\n\t\t\tthis._zoom(dataItem);\n\t\t}\n\n\t}\n\n\tprotected _zoom(_dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t}\n\n\tprotected _handleSingle(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst parent = dataItem.get(\"parent\");\n\t\tif (parent) {\n\t\t\tconst children = parent.get(\"children\");\n\t\t\tif (children) {\n\t\t\t\t$array.each(children, (child) => {\n\t\t\t\t\tif (child != dataItem) {\n\t\t\t\t\t\tthis.disableDataItem(child);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Selects specific data item.\n\t *\n\t * @param  dataItem  Target data item\n\t */\n\tpublic selectDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst parent = dataItem.get(\"parent\");\n\t\tconst maxDepth = this.getPrivate(\"maxDepth\", 1);\n\n\t\tif (this.get(\"selectedDataItem\") == dataItem) {\n\t\t\tif (parent) {\n\t\t\t\tthis.set(\"selectedDataItem\", parent);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet depth = Math.min(this.get(\"downDepth\", 1), maxDepth - dataItem.get(\"depth\"));\n\n\t\t\t\tif (this._currentDownDepth == depth) {\n\t\t\t\t\tdepth = Math.min(this.get(\"initialDepth\", 1), maxDepth - this.get(\"topDepth\", 0));\n\t\t\t\t}\n\n\t\t\t\tthis._selectDataItem(dataItem, depth);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis.set(\"selectedDataItem\", dataItem);\n\t\t}\n\t}\n\n\n\tprotected _makeBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>, bulletFunction: (root: Root, series: Series, dataItem: DataItem<this[\"_dataItemSettings\"]>) => Bullet | undefined, index?: number) {\n\t\tconst bullet = super._makeBullet(dataItem, bulletFunction, index);\n\t\tif(bullet){\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tconst node = dataItem.get(\"node\");\n\n\t\t\tif (sprite) {\n\t\t\t\tnode.children.push(sprite);\n\t\t\t\tnode.on(\"width\", () => {\n\t\t\t\t\tthis._positionBullet(bullet);\n\t\t\t\t})\n\t\t\t\tnode.on(\"height\", () => {\n\t\t\t\t\tthis._positionBullet(bullet);\n\t\t\t\t})\n\t\t\t}\t\t\t\n\t\t}\n\t\treturn bullet;\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\n\t\tconst sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tconst dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\n\t\t\tconst locationX = bullet.get(\"locationX\", 0.5);\n\t\t\tconst locationY = bullet.get(\"locationY\", 0.5);\n\n\t\t\tconst node = dataItem.get(\"node\");\n\n\t\t\tsprite.set(\"x\", node.width() * locationX);\n\t\t\tsprite.set(\"y\", node.height() * locationY);\n\t\t}\n\t}\n\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { LinkedHierarchy, ILinkedHierarchyDataItem } from \"./LinkedHierarchy\";\n\nimport { HierarchyNode, IHierarchyNodePrivate, IHierarchyNodeSettings } from \"./HierarchyNode\";\n\nimport * as $array from \"../../core/util/Array\";\n\nexport interface ILinkedHierarchyNodeSettings extends IHierarchyNodeSettings {\n}\n\nexport interface ILinkedHierarchyNodePrivate extends IHierarchyNodePrivate {\n}\n\n/**\n * A node class for [[LinkedHierarchy]].\n */\nexport class LinkedHierarchyNode extends HierarchyNode {\n\n\t/**\n\t * A series node belongs to.\n\t */\n\tdeclare public series: LinkedHierarchy | undefined;\n\n\tdeclare public _settings: ILinkedHierarchyNodeSettings;\n\tdeclare public _privateSettings: ILinkedHierarchyNodePrivate;\n\n\tpublic static className: string = \"LinkedHierarchyNode\";\n\tpublic static classNames: Array<string> = HierarchyNode.classNames.concat([LinkedHierarchyNode.className]);\n\n\tdeclare protected _dataItem: DataItem<ILinkedHierarchyDataItem> | undefined;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.states.create(\"disabled\", {});\n\t\tthis.states.create(\"hover\", {});\n\t\tthis.states.create(\"hoverDisabled\", {});\n\t}\n\n\n\tpublic _updateLinks(duration?: number) {\n\t\tconst dataItem = this.dataItem;\n\t\tif (dataItem) {\n\t\t\tlet links = (dataItem as DataItem<ILinkedHierarchyDataItem>).get(\"links\");\n\n\t\t\t$array.each(links, (link) => {\n\t\t\t\tlet source = link.get(\"source\")\n\t\t\t\tlet target = link.get(\"target\")\n\n\t\t\t\tif (source && target) {\n\t\t\t\t\tif (source.get(\"node\").isHidden() || target.get(\"node\").isHidden()) {\n\t\t\t\t\t\tlink.hide(duration);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlink.show(duration);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"disabled\")) {\n\t\t\tthis._updateLinks();\n\t\t}\n\t}\n\n\tprotected _onHide(duration?: number) {\n\t\tsuper._onHide(duration);\n\t\tthis._updateLinks(duration);\n\t}\n\n\tprotected _onShow(duration?: number) {\n\t\tsuper._onShow(duration);\n\t\tthis._updateLinks(duration);\n\t}\n}\n","import type { IHierarchyDataItem } from \"./Hierarchy\";\nimport type { DataItem } from \"../../core/render/Component\";\n\nimport { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"../../core/render/Graphics\";\n\nexport interface IHierarchyLinkSettings extends IGraphicsSettings {\n\n\t/**\n\t * Source node data item.\n\t */\n\tsource?: DataItem<IHierarchyDataItem>;\n\n\t/**\n\t * Target node data item.\n\t */\n\ttarget?: DataItem<IHierarchyDataItem>;\n\n\t/**\n\t * Strength of the link.\n\t */\n\tstrength?: number;\n\n\t/**\n\t * Distance in pixels.\n\t */\n\tdistance?: number;\n\n}\n\nexport interface IHierarchyLinkPrivate extends IGraphicsPrivate {\n\td3Link:any;\n}\n\n/**\n * Draws a link between nodes in a hierarchy series.\n */\nexport class HierarchyLink extends Graphics {\n\tdeclare public _settings: IHierarchyLinkSettings;\n\tdeclare public _privateSettings: IHierarchyLinkPrivate;\n\n\tpublic static className: string = \"HierarchyLink\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([HierarchyLink.className]);\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\t\tif (this._clear) {\n\t\t\tlet source = this.get(\"source\");\n\t\t\tlet target = this.get(\"target\");\n\t\t\tif (source && target) {\n\t\t\t\tconst sourceNode = source.get(\"node\");\n\t\t\t\tconst targetNode = target.get(\"node\");\n\t\t\t\tthis._display.moveTo(sourceNode.x(), sourceNode.y());\n\t\t\t\tthis._display.lineTo(targetNode.x(), targetNode.y());\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"source\")) {\n\t\t\tconst source = this.get(\"source\");\n\t\t\tif (source) {\n\t\t\t\tconst sourceNode = source.get(\"node\");\n\t\t\t\tsourceNode.events.on(\"positionchanged\", () => {\n\t\t\t\t\tthis._markDirtyKey(\"stroke\");\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tif (this.isDirty(\"target\")) {\n\t\t\tconst target = this.get(\"target\");\n\t\t\tif (target) {\n\t\t\t\tconst targetNode = target.get(\"node\");\n\t\t\t\ttargetNode.events.on(\"positionchanged\", () => {\n\t\t\t\t\tthis._markDirtyKey(\"stroke\");\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type * as d3hierarchy from \"d3-hierarchy\";\n\nimport { Hierarchy, IHierarchySettings, IHierarchyDataItem, IHierarchyPrivate, IHierarchyEvents } from \"./Hierarchy\";\nimport { Container } from \"../../core/render/Container\";\nimport { LinkedHierarchyNode } from \"./LinkedHierarchyNode\";\nimport { HierarchyLink } from \"./HierarchyLink\";\nimport { Template } from \"../../core/util/Template\";\nimport { Circle } from \"../../core/render/Circle\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport type { IPoint } from \"../../core/util/IPoint\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $utils from \"../../core/util/Utils\";\n\n/**\n * @ignore\n */\nexport interface ILinkedHierarchyDataObject {\n\tname?: string,\n\tvalue?: number,\n\tchildren?: ILinkedHierarchyDataObject[],\n\tdataItem?: DataItem<ILinkedHierarchyDataItem>\n};\n\nexport interface ILinkedHierarchyDataItem extends IHierarchyDataItem {\n\n\t/**\n\t * An array of child data items.\n\t */\n\tchildren: Array<DataItem<ILinkedHierarchyDataItem>>;\n\n\t/**\n\t * A data item of a parent node.\n\t */\n\tparent: DataItem<ILinkedHierarchyDataItem>;\n\n\t/**\n\t * A related node.\n\t */\n\tnode: LinkedHierarchyNode;\n\n\t/**\n\t * [[Circle]] element of the related node.\n\t */\n\tcircle: Circle;\n\n\t/**\n\t * [[Circle]] element of the related node, representing outer circle.\n\t */\n\touterCircle: Circle;\n\n\t/**\n\t * A [[HierarchyLink]] leading to parent node.\n\t */\n\tparentLink: HierarchyLink;\n\n\t/**\n\t * An [[HierarchyLink]] leading to parent node.\n\t */\n\tlinks: Array<HierarchyLink>;\n\n\t/**\n\t * An array of [[HierarchyLink]] objects leading to child nodes.\n\t */\n\tchildLinks: Array<HierarchyLink>;\n\n\t/**\n\t * An array of IDs of directly linked nodes.\n\t */\n\tlinkWith: Array<string>;\n\n\t/**\n\t * @ignore\n\t */\n\td3HierarchyNode: d3hierarchy.HierarchyPointNode<ILinkedHierarchyDataObject>;\n\n}\n\nexport interface ILinkedHierarchySettings extends IHierarchySettings {\n\n\t/**\n\t * A field in data which holds IDs of nodes to link with.\n\t */\n\tlinkWithField?: string;\n\n}\n\nexport interface ILinkedHierarchyPrivate extends IHierarchyPrivate {\n}\n\nexport interface ILinkedHierarchyEvents extends IHierarchyEvents {\n}\n\n/**\n * A base class for linked hierarchy series.\n */\nexport abstract class LinkedHierarchy extends Hierarchy {\n\n\tpublic static className: string = \"LinkedHierarchy\";\n\tpublic static classNames: Array<string> = Hierarchy.classNames.concat([LinkedHierarchy.className]);\n\n\tdeclare public _settings: ILinkedHierarchySettings;\n\tdeclare public _privateSettings: ILinkedHierarchyPrivate;\n\tdeclare public _dataItemSettings: ILinkedHierarchyDataItem;\n\tdeclare public _events: ILinkedHierarchyEvents;\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"linkWith\", \"x\", \"y\");\n\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * A list of nodes in a [[LinkedHierarchy]] chart.\n\t *\n\t * @default new ListTemplate<LinkedHierarchyNode>\n\t */\n\tpublic readonly nodes: ListTemplate<LinkedHierarchyNode> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => LinkedHierarchyNode._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.nodes.template.get(\"themeTags\", []), [this._tag, \"linkedhierarchy\", \"hierarchy\", \"node\"]),\n\t\t\tx: this.width() / 2,\n\t\t\ty: this.height() / 2\n\t\t}, [this.nodes.template])\n\t);\n\n\t/**\n\t * A list of node circle elements in a [[LinkedHierarchy]] chart.\n\t *\n\t * @default new ListTemplate<Circle>\n\t */\n\tpublic readonly circles: ListTemplate<Circle> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Circle._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.circles.template.get(\"themeTags\", []), [this._tag, \"shape\"])\n\t\t}, [this.circles.template])\n\t);\n\n\t/**\n\t * A list of node outer circle elements in a [[LinkedHierarchy]] chart.\n\t *\n\t * @default new ListTemplate<Circle>\n\t */\n\tpublic readonly outerCircles: ListTemplate<Circle> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Circle._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.outerCircles.template.get(\"themeTags\", []), [this._tag, \"outer\", \"shape\"])\n\t\t}, [this.outerCircles.template])\n\t);\n\n\t/**\n\t * A list of link elements in a [[LinkedHierarchy]] chart.\n\t *\n\t * @default new ListTemplate<HierarchyLink>\n\t */\n\tpublic readonly links: ListTemplate<HierarchyLink> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => HierarchyLink._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.links.template.get(\"themeTags\", []), [this._tag, \"linkedhierarchy\", \"hierarchy\", \"link\"])\n\t\t}, [this.links.template])\n\t);\n\n\t/**\n\t * A [[Container]] that link elements are placed in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly linksContainer = this.children.moveValue(Container.new(this._root, {}), 0);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>): LinkedHierarchyNode {\n\t\tconst node = super.makeNode(dataItem) as LinkedHierarchyNode;\n\n\t\tconst circle = node.children.moveValue(this.circles.make(), 0);\n\t\tthis.circles.push(circle);\n\t\tnode.setPrivate(\"tooltipTarget\", circle);\n\t\tdataItem.setRaw(\"circle\", circle);\n\n\t\tconst outerCircle = node.children.moveValue(this.outerCircles.make(), 0);\n\t\tthis.outerCircles.push(outerCircle);\n\t\tdataItem.setRaw(\"outerCircle\", outerCircle);\n\n\t\tconst label = dataItem.get(\"label\");\n\n\t\tcircle.on(\"radius\", () => {\n\t\t\tconst d = circle.get(\"radius\", this.width()) * 2;\n\t\t\tlabel.setAll({ maxWidth: d, maxHeight: d })\n\t\t\touterCircle.set(\"radius\", d / 2);\n\n\t\t\tthis._handleRadiusChange();\n\t\t})\n\n\t\tconst d = circle.get(\"radius\", this.width()) * 2;\n\t\tlabel.setAll({ maxWidth: d, maxHeight: d });\n\t\t\n\t\tcircle._setDataItem(dataItem);\n\t\touterCircle._setDataItem(dataItem);\n\n\t\treturn node;\n\t}\n\n\tpublic _handleRadiusChange() {\n\n\t}\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tdataItem.setRaw(\"childLinks\", []);\n\t\tdataItem.setRaw(\"links\", []);\n\t\tsuper.processDataItem(dataItem);\n\t}\n\n\tprotected _processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._processDataItem(dataItem);\n\n\t\tconst parentDataItem = dataItem.get(\"parent\");\n\t\tif (parentDataItem && parentDataItem.get(\"depth\") >= this.get(\"topDepth\")) {\n\t\t\tconst link = this.linkDataItems(parentDataItem, dataItem);\n\t\t\tdataItem.setRaw(\"parentLink\", link);\n\t\t}\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tthis.updateLinkWith(this.dataItems);\n\t\tnode._updateLinks(0);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLinkWith(dataItems: Array<DataItem<this[\"_dataItemSettings\"]>>) {\n\t\t$array.each(dataItems, (dataItem) => {\n\t\t\tconst linkWith = dataItem.get(\"linkWith\");\n\t\t\tif (linkWith) {\n\t\t\t\t$array.each(linkWith, (id) => {\n\t\t\t\t\tconst linkWithDataItem = this._getDataItemById(this.dataItems, id);\n\n\t\t\t\t\tif (linkWithDataItem) {\n\t\t\t\t\t\tthis.linkDataItems(dataItem, linkWithDataItem);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tconst children = dataItem.get(\"children\");\n\t\t\tif (children) {\n\t\t\t\tthis.updateLinkWith(children);\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _getPoint(hierarchyNode: this[\"_dataItemSettings\"][\"d3HierarchyNode\"]): IPoint {\n\t\treturn { x: hierarchyNode.x, y: hierarchyNode.y };\n\t}\n\n\tprotected _updateNode(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateNode(dataItem);\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\tconst point = this._getPoint(hierarchyNode);\n\n\t\tconst duration = this.get(\"animationDuration\", 0);\n\t\tconst easing = this.get(\"animationEasing\");\n\n\t\tnode.animate({ key: \"x\", to: point.x, duration: duration, easing: easing });\n\t\tnode.animate({ key: \"y\", to: point.y, duration: duration, easing: easing });\n\n\t\tconst hierarchyChildren = hierarchyNode.children;\n\t\tif (hierarchyChildren) {\n\t\t\t$array.each(hierarchyChildren, (hierarchyChild) => {\n\t\t\t\tthis._updateNodes(hierarchyChild)\n\t\t\t})\n\t\t}\n\n\t\tconst fill = dataItem.get(\"fill\");\n\t\tconst circle = dataItem.get(\"circle\");\n\t\tconst children = dataItem.get(\"children\");\n\t\t\n\t\tif (circle) {\n\t\t\tcircle._setDefault(\"fill\", fill);\n\t\t\tcircle._setDefault(\"stroke\", fill);\n\t\t}\n\n\t\tconst outerCircle = dataItem.get(\"outerCircle\");\n\t\tif (outerCircle) {\n\t\t\touterCircle._setDefault(\"fill\", fill);\n\t\t\touterCircle._setDefault(\"stroke\", fill);\n\n\t\t\tif (!children || children.length == 0) {\n\t\t\t\touterCircle.setPrivate(\"visible\", false);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Link two data items with a link element.\n\t *\n\t * @param   source    Source node data item\n\t * @param   target    Target node data item\n\t * @param   strength  Link strength\n\t * @return            Link element\n\t */\n\tpublic linkDataItems(source: DataItem<this[\"_dataItemSettings\"]>, target: DataItem<this[\"_dataItemSettings\"]>, strength?: number): HierarchyLink {\n\n\t\tlet link!: HierarchyLink;\n\n\t\tconst sourceLinks = source.get(\"links\");\n\n\t\tif (sourceLinks) {\n\t\t\t$array.each(sourceLinks, (lnk) => {\n\t\t\t\tif (lnk.get(\"target\") == target) {\n\t\t\t\t\tlink = lnk;\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tconst targetLinks = target.get(\"links\");\n\n\t\tif (targetLinks) {\n\t\t\t$array.each(targetLinks, (lnk) => {\n\t\t\t\tif (lnk.get(\"target\") == source) {\n\t\t\t\t\tlink = lnk;\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif (!link) {\n\t\t\tlink = this.links.make();\n\t\t\tthis.links.push(link);\n\t\t\tthis.linksContainer.children.push(link);\n\t\t\tlink.set(\"source\", source);\n\t\t\tlink.set(\"target\", target);\n\t\t\tlink._setDataItem(source);\n\t\t\tlink.set(\"stroke\", source.get(\"fill\"));\n\t\t\tif (strength != null) {\n\t\t\t\tlink.set(\"strength\", strength)\n\t\t\t}\n\n\t\t\tsource.get(\"childLinks\").push(link);\n\n\t\t\t$array.move(source.get(\"links\"), link);\n\t\t\t$array.move(target.get(\"links\"), link);\n\n\t\t\tthis._processLink(link, source, target);\n\t\t}\n\n\t\treturn link;\n\t}\n\n\n\t/**\n\t * Unlink two linked data items.\n\t *\n\t * @param   source  Source node data item\n\t * @param   target  Target node data item\n\t */\n\tpublic unlinkDataItems(source: DataItem<this[\"_dataItemSettings\"]>, target: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tlet link!: HierarchyLink;\n\n\t\tconst sourceLinks = source.get(\"links\");\n\n\t\tif (sourceLinks) {\n\t\t\t$array.each(sourceLinks, (lnk) => {\n\t\t\t\tif (lnk && lnk.get(\"target\") == target) {\n\t\t\t\t\tlink = lnk;\n\t\t\t\t\t$array.remove(sourceLinks, link);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tconst targetLinks = target.get(\"links\");\n\n\t\tif (targetLinks) {\n\t\t\t$array.each(targetLinks, (lnk) => {\n\t\t\t\tif (lnk && lnk.get(\"target\") == source) {\n\t\t\t\t\tlink = lnk;\n\t\t\t\t\t$array.remove(targetLinks, link);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif (link) {\n\t\t\tthis._disposeLink(link);\n\t\t}\n\n\t\tthis._handleUnlink();\n\t}\n\n\tprotected _handleUnlink() {\n\n\t}\n\n\tprotected _disposeLink(link: HierarchyLink) {\n\t\tthis.links.removeValue(link);\n\t\tlink.dispose();\n\t}\n\n\t/**\n\t * Returns `true` if two nodes are linked with each other.\n\t */\n\tpublic areLinked(source: DataItem<this[\"_dataItemSettings\"]>, target: DataItem<this[\"_dataItemSettings\"]>): boolean {\n\t\tconst sourceLinks = source.get(\"links\");\n\t\tlet linked = false;\n\t\tif (sourceLinks) {\n\t\t\t$array.each(sourceLinks, (lnk) => {\n\t\t\t\tif (lnk.get(\"target\") == target) {\n\t\t\t\t\tlinked = true;\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tconst targetLinks = target.get(\"links\");\n\n\t\tif (targetLinks) {\n\t\t\t$array.each(targetLinks, (lnk) => {\n\t\t\t\tif (lnk.get(\"target\") == source) {\n\t\t\t\t\tlinked = true;\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\treturn linked;\n\t}\n\n\tprotected _processLink(_link: HierarchyLink, _source: DataItem<this[\"_dataItemSettings\"]>, _target: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst links = dataItem.get(\"links\");\n\t\tif (links) {\n\t\t\t$array.each(links, (link) => {\n\t\t\t\tthis._disposeLink(link)\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Select a data item.\n\t * @param  dataItem  Data item\n\t */\n\tpublic selectDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst parent = dataItem.get(\"parent\");\n\n\t\tif (!dataItem.get(\"disabled\")) {\n\t\t\tthis.set(\"selectedDataItem\", dataItem);\n\t\t\tthis._selectDataItem(dataItem);\n\t\t}\n\t\telse {\n\t\t\tif (parent) {\n\t\t\t\tthis.setRaw(\"selectedDataItem\", parent);\n\t\t\t\tconst type = \"dataitemselected\";\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this, dataItem: parent });\n\t\t\t\tthis.disableDataItem(dataItem);\n\t\t\t}\n\t\t}\n\t}\n}\n","// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\nconst a = 1664525;\nconst c = 1013904223;\nconst m = 4294967296; // 2^32\n\nexport default function() {\n  let s = 1;\n  return () => (s = (a * s + c) % m) / m;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer} from \"d3-timer\";\nimport lcg from \"./lcg.js\";\n\nexport function x(d) {\n  return d.x;\n}\n\nexport function y(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nexport default function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = new Map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\"),\n      random = lcg();\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i, n = nodes.length, node;\n\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.forEach(function(force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\n        else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(0.5 + i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes, random);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.forEach(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    randomSource: function(_) {\n      return arguments.length ? (random = _, forces.forEach(initializeForce), simulation) : random;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.delete(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n","export default function(d) {\n  const x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, abort.\n  if (x0 > x1 || y0 > y1) return this;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n","export default function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n","export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n","export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n","import tree_add, {addAll as tree_addAll} from \"./add.js\";\nimport tree_cover from \"./cover.js\";\nimport tree_data from \"./data.js\";\nimport tree_extent from \"./extent.js\";\nimport tree_find from \"./find.js\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove.js\";\nimport tree_root from \"./root.js\";\nimport tree_size from \"./size.js\";\nimport tree_visit from \"./visit.js\";\nimport tree_visitAfter from \"./visitAfter.js\";\nimport tree_x, {defaultX} from \"./x.js\";\nimport tree_y, {defaultY} from \"./y.js\";\n\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(random) {\n  return (random() - 0.5) * 1e-6;\n}\n","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nexport default function(radius) {\n  var nodes,\n      radii,\n      random,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(random), l += x * x;\n            if (y === 0) y = jiggle(random), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"node not found: \" + nodeId);\n  return node;\n}\n\nexport default function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      random,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle(random);\n        y = target.y + target.vy - source.y - source.vy || jiggle(random);\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d])),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n","export default function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else {\n    var z = x1 - x0 || 1,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n      i = (y < y0) << 1 | (x < x0);\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n      switch (i) {\n        case 0: x1 = x0 + z, y1 = y0 + z; break;\n        case 1: x0 = x1 - z, y1 = y0 + z; break;\n        case 2: x1 = x0 + z, y0 = y1 - z; break;\n        case 3: x0 = x1 - z, y0 = y1 - z; break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n","export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n","export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n","import Quad from \"./quad.js\";\n\nexport default function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n","export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n","export default function() {\n  return this._root;\n}\n","export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { Percent } from \"../../core/util/Percent\";\nimport type { LinkedHierarchyNode } from \"./LinkedHierarchyNode\";\nimport type { HierarchyLink } from \"./HierarchyLink\";\nimport type * as d3Hierarchy from \"d3-hierarchy\";\n\nimport { LinkedHierarchy, ILinkedHierarchySettings, ILinkedHierarchyDataItem, ILinkedHierarchyPrivate, ILinkedHierarchyEvents } from \"./LinkedHierarchy\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $type from \"../../core/util/Type\";\nimport * as d3Force from \"d3-force\";\n\n/**\n * @ignore\n */\nexport interface IForceDirectedDataObject {\n\tname?: string,\n\tvalue?: number,\n\tchildren?: IForceDirectedDataObject[],\n\tdataItem?: DataItem<IForceDirectedDataItem>\n};\n\nexport interface IForceDirectedDataItem extends ILinkedHierarchyDataItem {\n\n\t/**\n\t * An array of data items of child nodes.\n\t */\n\tchildren: Array<DataItem<IForceDirectedDataItem>>;\n\n\t/**\n\t * Data item of a parent node.\n\t */\n\tparent: DataItem<IForceDirectedDataItem>;\n\n\t/**\n\t * @ignore\n\t */\n\td3ForceNode: d3Force.SimulationNodeDatum;\n\n\t/**\n\t * X coordinate.\n\t */\n\tx: number;\n\n\t/**\n\t * Y coordinate.\n\t */\n\ty: number;\n\n}\n\nexport interface IForceDirectedSettings extends ILinkedHierarchySettings {\n\n\t/**\n\t * Minimum gap in pixels between the nodes.\n\t */\n\tnodePadding?: number;\n\n\t/**\n\t * A force that attracts (or pushes back) all nodes to the center of the\n\t * chart.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Layout_and_force_simulation} for more info\n\t * @default 0.5\n\t */\n\tcenterStrength?: number;\n\n\t/**\n\t * A force that attracts (or pushes back) all nodes to each other.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Layout_and_force_simulation} for more info\n\t * @default -15\n\t */\n\tmanyBodyStrength?: number;\n\n\t/**\n\t * A force that attracts (or pushes back) nodes that are linked together\n\t * via `linkWithField`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Layout_and_force_simulation} for more info\n\t * @default 0.5\n\t */\n\tlinkWithStrength?: number | undefined;\n\n\t/**\n\t * Resistance acting agains node speed.\n\t *\n\t * The greater the value, the more \"sluggish\" the nodes will be.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Layout_and_force_simulation} for more info\n\t * @default 0.5\n\t */\n\tvelocityDecay?: number;\n\n\t/**\n\t * Length of how long initial force simulation would run in frames.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Layout_and_force_simulation} for more info\n\t * @default 500\n\t */\n\tinitialFrames?: number;\n\n\t/**\n\t * If set to a number will wait X number of frames before revealing\n\t * the tree.\n\t *\n\t * Can be used to hide initial animations where nodes settle into their\n\t * places.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Layout_and_force_simulation} for more info\n\t * @default 10\n\t */\n\tshowOnFrame?: number;\n\n\t/**\n\t * Smallest possible radius for a node circle.\n\t *\n\t * Can be a fixed pixel value or percent relative to chart size.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Sizing_nodes} for more info\n\t * @default 1%\n\t */\n\tminRadius?: number | Percent;\n\n\t/**\n\t * Biggest possible radius for a node circle.\n\t *\n\t * Can be a fixed pixel value or percent relative to chart size.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Sizing_nodes} for more info\n\t * @default 8%\n\t */\n\tmaxRadius?: number | Percent;\n\n\t/**\n\t * Field in data that holds X coordinate of the node.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Fixed_nodes} for more info\n\t */\n\txField?: string;\n\n\t/**\n\t * Field in data that holds X coordinate of the node.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Fixed_nodes} for more info\n\t */\n\tyField?: string;\n\n}\n\nexport interface IForceDirectedPrivate extends ILinkedHierarchyPrivate {\n}\n\nexport interface IForceDirectedEvents extends ILinkedHierarchyEvents {\n}\n\n/**\n * Creates a force-directed tree.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/} for more info\n * @important\n */\nexport class ForceDirected extends LinkedHierarchy {\n\n\tprotected _tag: string = \"forcedirected\";\n\n\t/**\n\t * @ignore\n\t */\n\tpublic readonly d3forceSimulation: d3Force.Simulation<{}, d3Force.SimulationLinkDatum<d3Force.SimulationNodeDatum>> = d3Force.forceSimulation();\n\n\t/**\n\t * @ignore\n\t */\n\tpublic readonly collisionForce: d3Force.ForceCollide<d3Force.SimulationNodeDatum> = d3Force.forceCollide(20);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic linkForce: d3Force.ForceLink<d3Force.SimulationNodeDatum, d3Force.SimulationLinkDatum<d3Force.SimulationNodeDatum>> = d3Force.forceLink();\n\n\tpublic static className: string = \"ForceDirected\";\n\tpublic static classNames: Array<string> = LinkedHierarchy.classNames.concat([ForceDirected.className]);\n\n\tdeclare public _settings: IForceDirectedSettings;\n\tdeclare public _privateSettings: IForceDirectedPrivate;\n\tdeclare public _dataItemSettings: IForceDirectedDataItem;\n\tdeclare public _events: IForceDirectedEvents;\n\n\tprotected _nodes: Array<any> = [];\n\tprotected _links: Array<any> = [];\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.d3forceSimulation.on(\"tick\", () => {\n\t\t\tthis._tick++;\n\t\t\tthis.updateNodePositions();\n\t\t});\n\t}\n\n\tprotected _tick: number = 0;\n\tprotected _nodesDirty: boolean = false;\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\t\tif (this.isDirty(\"showOnFrame\")) {\n\t\t\tconst showOnFrame = this.get(\"showOnFrame\");\n\t\t\tif (showOnFrame > this._tick) {\n\t\t\t\tthis.nodesContainer.setPrivate(\"visible\", false);\n\t\t\t\tthis.linksContainer.setPrivate(\"visible\", false);\n\t\t\t}\n\t\t}\n\n\t\tconst d3forceSimulation = this.d3forceSimulation;\n\n\t\tif (this.isDirty(\"velocityDecay\")) {\n\t\t\td3forceSimulation.velocityDecay(this.get(\"velocityDecay\", 0));\n\t\t}\n\n\t\tif (this.isDirty(\"initialFrames\")) {\n\t\t\td3forceSimulation.alphaDecay(1 - Math.pow(0.001, 1 / this.get(\"initialFrames\", 500)));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic restartSimulation(alpha: number): void {\n\t\tconst d3forceSimulation = this.d3forceSimulation;\n\t\tif (d3forceSimulation.alpha() < alpha) {\n\t\t\td3forceSimulation.alpha(alpha);\n\t\t\td3forceSimulation.restart();\n\t\t}\n\t}\n\n\tpublic _handleRadiusChange() {\n\t\tthis._updateForces();\n\t}\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst d3ForceNode: any = { index: this._index, x: this.innerWidth() / 2, y: this.innerHeight() / 2, dataItem: dataItem };\n\t\tconst index = this._nodes.push(d3ForceNode) - 1;\n\t\td3ForceNode.index = index;\n\n\t\tthis.d3forceSimulation.nodes(this._nodes);\n\n\t\tdataItem.set(\"d3ForceNode\", d3ForceNode);\n\t\tsuper.processDataItem(dataItem);\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tnode.on(\"scale\", () => {\n\t\t\tthis._nodesDirty = true;\n\t\t\tthis.markDirty();\n\t\t})\n\n\t\tnode.events.on(\"dragged\", () => {\n\t\t\td3ForceNode.fx = node.x();\n\t\t\td3ForceNode.fy = node.y();\n\t\t\tthis._updateForces();\n\t\t})\n\n\t\tnode.events.on(\"dragstop\", () => {\n\t\t\tif (dataItem.get(\"x\") == null) {\n\t\t\t\td3ForceNode.fx = undefined;\n\t\t\t}\n\t\t\tif (dataItem.get(\"y\") == null) {\n\t\t\t\td3ForceNode.fy = undefined;\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _updateValues(d3HierarchyNode: d3Hierarchy.HierarchyNode<IForceDirectedDataObject>) {\n\t\tsuper._updateValues(d3HierarchyNode);\n\n\t\tthis._nodesDirty = true;\n\n\t\tconst d3forceSimulation = this.d3forceSimulation;\n\t\td3forceSimulation.force(\"collision\", this.collisionForce);\n\t\td3forceSimulation.nodes(this._nodes);\n\n\t\tthis.linkForce = d3Force.forceLink(this._links);\n\t\td3forceSimulation.force(\"link\", this.linkForce);\n\t}\n\n\tprotected _updateVisuals() {\n\t\tsuper._updateVisuals();\n\t\tthis.restartSimulation(1);\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\n\t\tconst d3forceSimulation = this.d3forceSimulation;\n\n\t\tif (this._sizeDirty) {\n\t\t\tlet w = Math.max(50, this.innerWidth());\n\t\t\tlet h = Math.max(50, this.innerHeight());\n\t\t\tlet pt = this.get(\"paddingTop\", 0);\n\t\t\tlet pl = this.get(\"paddingLeft\", 0);\n\n\t\t\tlet centerStrength = this.get(\"centerStrength\", 1);\n\n\t\t\td3forceSimulation.force(\"x\", d3Force.forceX().x(w / 2 + pl).strength(centerStrength * 100 / w));\n\t\t\td3forceSimulation.force(\"y\", d3Force.forceY().y(h / 2 + pt).strength(centerStrength * 100 / h));\n\t\t}\n\n\t\tif (this._nodesDirty) {\n\t\t\tthis._updateForces();\n\t\t}\n\t}\n\n\tpublic _updateForces() {\n\t\tconst d3forceSimulation = this.d3forceSimulation;\n\t\td3forceSimulation.force(\"manybody\", d3Force.forceManyBody().strength((d3node) => {\n\t\t\tlet dataItem = (d3node as any).dataItem;\n\t\t\tlet node = dataItem.get(\"node\") as LinkedHierarchyNode;\n\t\t\tlet circle = dataItem.get(\"circle\");\n\t\t\tlet manyBodyStrength = this.get(\"manyBodyStrength\", -15);\n\t\t\treturn circle.get(\"radius\", 1) * node.get(\"scale\", 1) * manyBodyStrength;\n\t\t}));\n\n\t\tthis.collisionForce.radius((d3node) => {\n\t\t\tlet dataItem = (d3node as any).dataItem;\n\t\t\tlet node = dataItem.get(\"node\") as LinkedHierarchyNode;\n\t\t\tlet circle = dataItem.get(\"circle\");\n\t\t\tlet outerCircle = dataItem.get(\"outerCircle\");\n\t\t\tlet radius = circle.get(\"radius\", 1);\n\n\t\t\tif (!outerCircle.isHidden()) {\n\t\t\t\tradius = radius * outerCircle.get(\"scale\", 1.1);\n\t\t\t}\n\n\t\t\tradius *= node.get(\"scale\", 1);\n\n\t\t\treturn radius + this.get(\"nodePadding\", 0);\n\t\t})\n\n\t\tthis.restartSimulation(1);\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._nodesDirty = false;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateNodePositions() {\n\t\tconst linkForce = this.linkForce;\n\t\tif (linkForce) {\n\t\t\tlinkForce.distance((linkDatum) => {\n\t\t\t\treturn this.getDistance(linkDatum)\n\t\t\t});\n\t\t\tlinkForce.strength((linkDatum) => {\n\t\t\t\treturn this.getStrength(linkDatum)\n\t\t\t});\n\t\t}\n\t\tif (this._tick == this.get(\"showOnFrame\")) {\n\t\t\tthis.nodesContainer.setPrivate(\"visible\", true);\n\t\t\tthis.linksContainer.setPrivate(\"visible\", true);\n\t\t}\n\n\t\tlet d3Nodes = this.d3forceSimulation.nodes();\n\n\t\t$array.each(d3Nodes, (d3Node: any) => {\n\t\t\tconst dataItem = d3Node.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\t\t\tconst node = dataItem.get(\"node\");\n\n\t\t\tnode.set(\"x\", d3Node.x);\n\t\t\tnode.set(\"y\", d3Node.y);\n\t\t})\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLinkWith(dataItems: Array<DataItem<this[\"_dataItemSettings\"]>>) {\n\t\t$array.each(dataItems, (dataItem) => {\n\t\t\tconst linkWith = dataItem.get(\"linkWith\");\n\t\t\tif (linkWith) {\n\t\t\t\t$array.each(linkWith, (id) => {\n\t\t\t\t\tconst linkWithDataItem = this._getDataItemById(this.dataItems, id);\n\n\t\t\t\t\tif (linkWithDataItem) {\n\t\t\t\t\t\tthis.linkDataItems(dataItem, linkWithDataItem, this.get(\"linkWithStrength\"));\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tconst children = dataItem.get(\"children\");\n\t\t\tif (children) {\n\t\t\t\tthis.updateLinkWith(children);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected getDistance(linkDatum: any) {\n\t\tlet sourceDataItem: DataItem<this[\"_dataItemSettings\"]> = <DataItem<this[\"_dataItemSettings\"]>>linkDatum.sourceDataItem;\n\t\tlet targetDataItem: DataItem<this[\"_dataItemSettings\"]> = <DataItem<this[\"_dataItemSettings\"]>>linkDatum.targetDataItem;\n\n\t\tlet distance = 0;\n\n\t\tif (sourceDataItem && targetDataItem) {\n\n\t\t\tconst targetNode = targetDataItem.get(\"node\");\n\t\t\tif (targetNode.isHidden()) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tlet link = linkDatum.link;\n\t\t\tif (link) {\n\t\t\t\tdistance = link.get(\"distance\", 1);\n\t\t\t}\n\n\t\t\tconst sourceNode = sourceDataItem.get(\"node\");\n\n\t\t\tif (targetNode.isHidden()) {\n\t\t\t\tdistance = 1;\n\t\t\t}\n\n\t\t\treturn (distance * (sourceDataItem.get(\"circle\").get(\"radius\", 1) * sourceNode.get(\"scale\", 1) + targetDataItem.get(\"circle\").get(\"radius\", 1) * targetNode.get(\"scale\", 1)));\n\t\t}\n\t\treturn distance;\n\t}\n\n\t/**\n\t * @ignore\n\t * @todo description\n\t */\n\tprotected getStrength(linkDatum: any) {\n\t\tlet strength = 0;\n\n\t\tlet link = linkDatum.link;\n\t\tif (link) {\n\t\t\tstrength = link.get(\"strength\", 1);\n\t\t}\n\n\t\tconst targetDataItem = linkDatum.targetDataItem;\n\t\tstrength *= targetDataItem.get(\"node\").get(\"scale\");\n\n\t\treturn strength;\n\t}\n\n\tprotected _updateNode(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateNode(dataItem);\n\t\tthis._updateRadius(dataItem);\n\n\t\tconst x = dataItem.get(\"x\");\n\t\tconst y = dataItem.get(\"y\");\n\n\t\tconst d3Node = dataItem.get(\"d3ForceNode\");\n\n\t\tif (x != null) {\n\t\t\t(d3Node as any).fx = $utils.relativeToValue(x, this.innerWidth());\n\t\t}\n\n\t\tif (y != null) {\n\t\t\t(d3Node as any).fy = $utils.relativeToValue(y, this.innerHeight());\n\t\t}\n\t}\n\n\tprotected _updateRadius(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet size = (this.innerWidth() + this.innerHeight()) / 2;\n\n\t\tlet minRadius = $utils.relativeToValue(this.get(\"minRadius\", 1), size);\n\t\tlet maxRadius = $utils.relativeToValue(this.get(\"maxRadius\", 5), size);\n\n\t\tlet valueWorking = dataItem.get(\"sum\");\n\n\t\tlet radius = maxRadius;\n\n\t\tconst min = this.getPrivate(\"valueLow\", 0);\n\t\tconst max = this.getPrivate(\"valueHigh\", 0);\n\n\t\tif (max > 0) {\n\t\t\tradius = minRadius + (valueWorking - min) / (max - min) * (maxRadius - minRadius);\n\t\t}\n\n\t\tif (!$type.isNumber(radius)) {\n\t\t\tradius = minRadius;\n\t\t}\n\n\t\tconst duration = this.get(\"animationDuration\", 0);\n\t\tconst easing = this.get(\"animationEasing\");\n\n\t\tdataItem.get(\"circle\").animate({ key: \"radius\", to: radius, duration: duration, easing: easing });\n\t}\n\n\tprotected _processLink(link: HierarchyLink, source: DataItem<this[\"_dataItemSettings\"]>, target: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst d3Link = { link: link, source: source.get(\"d3ForceNode\").index, target: target.get(\"d3ForceNode\").index, sourceDataItem: source, targetDataItem: target };\n\t\tthis._links.push(d3Link);\n\t\tlink.setPrivate(\"d3Link\", d3Link);\n\n\t\tthis.linkForce = d3Force.forceLink(this._links);\n\t\tthis.d3forceSimulation.force(\"link\", this.linkForce);\n\t\tthis.restartSimulation(0.5);\n\t}\n\n\tprotected _disposeLink(link: HierarchyLink) {\n\t\tsuper._disposeLink(link);\n\t\t$array.remove(this._links, link.getPrivate(\"d3Link\"));\n\t}\n\n\tprotected _handleUnlink() {\n\t\tthis.restartSimulation(0.5);\n\t}\n}\n","import constant from \"./constant.js\";\n\nexport default function(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\n\nexport default function(y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\nimport {x, y} from \"./simulation.js\";\n\nexport default function() {\n  var nodes,\n      node,\n      random,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x, y).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(random), l += x * x;\n        if (y === 0) y = jiggle(random), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(random), l += x * x;\n      if (y === 0) y = jiggle(random), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n","import {shuffle} from \"../array.js\";\n\nexport default function(circles) {\n  var i = 0, n = (circles = shuffle(Array.from(circles))).length, B = [], p, e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n}\n\nfunction extendBasis(B, p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i])\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error;\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + Math.max(a.r, b.r, 1) * 1e-9, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1: return encloseBasis1(B[0]);\n    case 2: return encloseBasis2(B[0], B[1]);\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n","import array from \"../array.js\";\nimport enclose from \"./enclose.js\";\n\nfunction place(b, a, c) {\n  var dx = b.x - a.x, x, a2,\n      dy = b.y - a.y, y, b2,\n      d2 = dx * dx + dy * dy;\n  if (d2) {\n    a2 = a.r + c.r, a2 *= a2;\n    b2 = b.r + c.r, b2 *= b2;\n    if (a2 > b2) {\n      x = (d2 + b2 - a2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));\n      c.x = b.x - x * dx - y * dy;\n      c.y = b.y - x * dy + y * dx;\n    } else {\n      x = (d2 + a2 - b2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));\n      c.x = a.x + x * dx - y * dy;\n      c.y = a.y + x * dy + y * dx;\n    }\n  } else {\n    c.x = a.x + c.r;\n    c.y = a.y;\n  }\n}\n\nfunction intersects(a, b) {\n  var dr = a.r + b.r - 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nexport function packEnclose(circles) {\n  if (!(n = (circles = array(circles)).length)) return 0;\n\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node(a), b = new Node(b), c = new Node(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nexport default function(circles) {\n  packEnclose(circles);\n  return circles;\n}\n","export default function(x) {\n  return typeof x === \"object\" && \"length\" in x\n    ? x // Array, TypedArray, NodeList, array-like\n    : Array.from(x); // Map, Set, iterable, string, or anything else\n}\n\nexport function shuffle(array) {\n  var m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n","export function optional(f) {\n  return f == null ? null : required(f);\n}\n\nexport function required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n","export function constantZero() {\n  return 0;\n}\n\nexport default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {packEnclose} from \"./siblings.js\";\nimport {optional} from \"../accessors.js\";\nimport constant, {constantZero} from \"../constant.js\";\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nexport default function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant(+x), pack) : padding;\n  };\n\n  return pack;\n}\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { HierarchyNode } from \"./HierarchyNode\";\n\nimport { Hierarchy, IHierarchyPrivate, IHierarchySettings, IHierarchyDataItem, IHierarchyEvents } from \"./Hierarchy\";\nimport { Circle } from \"../../core/render/Circle\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as d3hierarchy from \"d3-hierarchy\";\nimport * as $utils from \"../../core/util/Utils\";\n\n/**\n * @ignore\n */\nexport interface IPackDataObject {\n\tname?: string,\n\tvalue?: number,\n\tchildren?: IPackDataObject[],\n\tdataItem?: DataItem<IPackDataItem>\n};\n\nexport interface IPackDataItem extends IHierarchyDataItem {\n\n\t/**\n\t * An array of data items of node's children.\n\t */\n\tchildren: Array<DataItem<IPackDataItem>>;\n\n\t/**\n\t * A data item of node's parent.\n\t */\n\tparent: DataItem<IPackDataItem>;\n\n\t/**\n\t * @ignore\n\t */\n\td3HierarchyNode: d3hierarchy.HierarchyCircularNode<IPackDataObject>;\n\n\t/**\n\t * A [[Circle]] element of the node.\n\t */\n\tcircle: Circle;\n\n}\n\nexport interface IPackSettings extends IHierarchySettings {\n}\n\nexport interface IPackPrivate extends IHierarchyPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tscaleR?: number;\n\n}\n\nexport interface IPackEvents extends IHierarchyEvents {\n}\n\n/**\n * Builds a pack diagram.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/sunburst/} for more info\n * @important\n */\nexport class Pack extends Hierarchy {\n\n\tdeclare public _settings: IPackSettings;\n\tdeclare public _privateSettings: IPackPrivate;\n\tdeclare public _dataItemSettings: IPackDataItem;\n\n\tprotected _tag: string = \"pack\";\n\n\tpublic static className: string = \"Pack\";\n\tpublic static classNames: Array<string> = Hierarchy.classNames.concat([Pack.className]);\n\n\tpublic _packLayout = d3hierarchy.pack();\n\tdeclare public _rootNode: d3hierarchy.HierarchyCircularNode<IPackDataObject> | undefined;\n\tpublic _packData: IPackDataObject | undefined;\n\n\t/**\n\t * A list of node circle elements in a [[Pack]] chart.\n\t *\n\t * @default new ListTemplate<Circle>\n\t */\n\tpublic readonly circles: ListTemplate<Circle> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Circle._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.circles.template.get(\"themeTags\", []), [this._tag, \"shape\"])\n\t\t}, [this.circles.template])\n\t);\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.setPrivate(\"scaleR\", 1);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isPrivateDirty(\"scaleR\")) {\n\t\t\tif (this._rootNode) {\n\t\t\t\tthis._updateNodesScale(this._rootNode);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateVisuals() {\n\t\tif (this._rootNode) {\n\t\t\tconst packLayout = this._packLayout;\n\t\t\tpackLayout.size([this.innerWidth(), this.innerHeight()]);\n\t\t\tpackLayout(this._rootNode);\n\t\t\tthis._updateNodes(this._rootNode);\n\t\t}\n\t}\n\n\tprotected _updateNode(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateNode(dataItem);\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tconst circle = dataItem.get(\"circle\");\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\tconst scaleR = this.getPrivate(\"scaleR\", 1);\n\n\t\tconst x = hierarchyNode.x * scaleR;\n\t\tconst y = hierarchyNode.y * scaleR;\n\t\tconst radius = hierarchyNode.r * scaleR;\n\n\t\tconst duration = this.get(\"animationDuration\", 0);\n\t\tconst easing = this.get(\"animationEasing\");\n\n\t\tnode.animate({ key: \"x\", to: x, duration: duration, easing: easing })\n\t\tnode.animate({ key: \"y\", to: y, duration: duration, easing: easing })\n\n\t\tif (circle) {\n\t\t\tconst fill = dataItem.get(\"fill\");\n\n\t\t\tcircle.animate({ key: \"radius\", to: radius, duration: duration, easing: easing })\n\t\t\tcircle._setDefault(\"fill\", fill);\n\t\t\tcircle._setDefault(\"stroke\", fill);\n\t\t}\n\t}\n\n\tprotected _updateNodesScale(hierarchyNode: d3hierarchy.HierarchyCircularNode<IPackDataObject>) {\n\t\tconst dataItem = hierarchyNode.data.dataItem;\n\t\tif (dataItem) {\n\t\t\tconst node = dataItem.get(\"node\");\n\t\t\tconst circle = dataItem.get(\"circle\");\n\n\t\t\tconst scaleR = this.getPrivate(\"scaleR\", 1);\n\n\t\t\tconst x = hierarchyNode.x * scaleR;\n\t\t\tconst y = hierarchyNode.y * scaleR;\n\t\t\tconst radius = hierarchyNode.r * scaleR;\n\n\t\t\tnode.setAll({ x: x, y: y })\n\t\t\tcircle.set(\"radius\", radius);\n\n\t\t\tconst hierarchyChildren = hierarchyNode.children;\n\t\t\tif (hierarchyChildren) {\n\t\t\t\t$array.each(hierarchyChildren, (hierarchyChild) => {\n\t\t\t\t\tthis._updateNodesScale(hierarchyChild)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>): HierarchyNode {\n\t\tconst node = super.makeNode(dataItem);\n\n\t\tconst circle = node.children.moveValue(this.circles.make(), 0);\n\t\tnode.setPrivate(\"tooltipTarget\", circle);\n\t\tthis.circles.push(circle);\n\t\tdataItem.setRaw(\"circle\", circle);\n\n\t\tconst label = dataItem.get(\"label\");\n\n\t\tcircle.on(\"radius\", () => {\n\t\t\tconst d = circle.get(\"radius\", this.width()) * 2;\n\t\t\tlabel.setAll({ maxWidth: d, maxHeight: d });\n\t\t})\n\n\t\treturn node;\n\t}\n\n\tpublic _zoom(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\tlet x = hierarchyNode.x;\n\t\tlet y = hierarchyNode.y;\n\t\tlet r = hierarchyNode.r;\n\n\t\tlet scaleR = Math.min(this.innerWidth(), this.innerHeight()) / (r * 2);\n\n\t\tconst easing = this.get(\"animationEasing\");\n\t\tlet duration = this.get(\"animationDuration\", 0);\n\n\t\tif (!this.inited) {\n\t\t\tduration = 0;\n\t\t}\n\n\t\tthis.animatePrivate({ key: \"scaleR\", to: scaleR, duration: duration, easing: easing });\n\n\t\tconst nodesContainer = this.nodesContainer;\n\t\tnodesContainer.animate({ key: \"x\", from: nodesContainer.x(), to: this.width() / 2 - x * scaleR, duration: duration, easing: easing });\n\t\tnodesContainer.animate({ key: \"y\", from: nodesContainer.y(), to: this.height() / 2 - y * scaleR, duration: duration, easing: easing });\n\t}\n}\n","export default function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}\n","import roundNode from \"./treemap/round.js\";\nimport treemapDice from \"./treemap/dice.js\";\n\nexport default function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n}\n","import type { HierarchyNode } from \"./HierarchyNode\";\nimport type { DataItem } from \"../../core/render/Component\";\n\nimport { Hierarchy, IHierarchyPrivate, IHierarchySettings, IHierarchyDataItem, IHierarchyDataObject } from \"./Hierarchy\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as d3hierarchy from \"d3-hierarchy\";\n\n/**\n * @ignore\n */\nexport interface IPartitionDataObject {\n\tname?: string,\n\tvalue?: number,\n\tchildren?: IPartitionDataObject[],\n\tdataItem?: DataItem<IPartitionDataItem>\n};\n\nexport interface IPartitionDataItem extends IHierarchyDataItem {\n\n\t/**\n\t * Data items of child nodes.\n\t */\n\tchildren: Array<DataItem<IPartitionDataItem>>;\n\n\t/**\n\t * Data it of a parent node.\n\t */\n\tparent: DataItem<IPartitionDataItem>;\n\n\t/**\n\t * @ignore\n\t */\n\td3HierarchyNode: d3hierarchy.HierarchyRectangularNode<IHierarchyDataObject>;\n\n\t/**\n\t * A [[RoundedRectangle]] element of a node.\n\t */\n\trectangle: RoundedRectangle;\n\n}\n\nexport interface IPartitionSettings extends IHierarchySettings {\n\n\t/**\n\t * Gap between nodes in pixels.\n\t *\n\t * @default 0\n\t */\n\tnodePadding?: number;\n\n\t/**\n\t * Orientation of the diagram.\n\t *\n\t * @default \"vertical\"\n\t */\n\torientation?: \"horizontal\" | \"vertical\";\n\n}\n\nexport interface IPartitionPrivate extends IHierarchyPrivate {\n\n\t/**\n\t * Current horizontal scale.\n\t */\n\tscaleX?: number;\n\n\t/**\n\t * Current vertical scale.\n\t */\n\tscaleY?: number;\n\n}\n\n/**\n * Partition series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/partition/} for more info\n */\nexport class Partition extends Hierarchy {\n\n\tdeclare public _settings: IPartitionSettings;\n\tdeclare public _privateSettings: IPartitionPrivate;\n\tdeclare public _dataItemSettings: IPartitionDataItem;\n\n\tprotected _tag: string = \"partition\";\n\n\tpublic static className: string = \"Partition\";\n\tpublic static classNames: Array<string> = Hierarchy.classNames.concat([Partition.className]);\n\n\t/**\n\t * A list of node rectangle elements in a [[LinkedHierarchy]] chart.\n\t *\n\t * @default new ListTemplate<RoundedRectangle>\n\t */\n\tpublic readonly rectangles: ListTemplate<RoundedRectangle> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => RoundedRectangle._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.rectangles.template.get(\"themeTags\", []), [this._tag, \"shape\"])\n\t\t}, [this.rectangles.template])\n\t);\n\n\tpublic _partitionLayout = d3hierarchy.partition();\n\n\tdeclare public _rootNode: d3hierarchy.HierarchyRectangularNode<IPartitionDataObject> | undefined;\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"partition\", this._settings.orientation || \"vertical\"]);\n\t\tsuper._afterNew();\n\t\tthis.setPrivate(\"scaleX\", 1);\n\t\tthis.setPrivate(\"scaleY\", 1);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"nodePadding\")) {\n\t\t\tif (this._rootNode) {\n\t\t\t\tthis._updateNodes(this._rootNode);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isPrivateDirty(\"scaleX\") || this.isPrivateDirty(\"scaleY\")) {\n\t\t\tif (this._rootNode) {\n\t\t\t\tthis._updateNodesScale(this._rootNode);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"orientation\")) {\n\t\t\tthis._updateVisuals();\n\t\t}\n\t}\n\n\tprotected _updateVisuals() {\n\t\tif (this._rootNode) {\n\t\t\tconst partitionLayout = this._partitionLayout;\n\t\t\tlet w = this.innerWidth();\n\t\t\tlet h = this.innerHeight();\n\n\t\t\tif (this.get(\"orientation\") == \"horizontal\") {\n\t\t\t\t[w, h] = [h, w];\n\t\t\t}\n\n\t\t\tpartitionLayout.size([w, h]);\n\n\t\t\tconst nodePadding = this.get(\"nodePadding\");\n\n\t\t\tif ($type.isNumber(nodePadding)) {\n\t\t\t\tpartitionLayout.padding(nodePadding);\n\t\t\t}\n\n\n\t\t\tpartitionLayout(this._rootNode);\n\t\t\tthis._updateNodes(this._rootNode);\n\t\t}\n\t}\n\n\tprotected _updateNode(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateNode(dataItem);\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tconst rectangle = dataItem.get(\"rectangle\");\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\tconst scaleX = this.getPrivate(\"scaleX\", 1);\n\t\tconst scaleY = this.getPrivate(\"scaleY\", 1);\n\n\t\tlet x0, x1, y0, y1: number;\n\n\t\tif (this.get(\"orientation\") == \"horizontal\") {\n\t\t\tx0 = hierarchyNode.y0 * scaleX;\n\t\t\tx1 = hierarchyNode.y1 * scaleX;\n\t\t\ty0 = hierarchyNode.x0 * scaleY;\n\t\t\ty1 = hierarchyNode.x1 * scaleY;\n\t\t}\n\t\telse {\n\t\t\tx0 = hierarchyNode.x0 * scaleX;\n\t\t\tx1 = hierarchyNode.x1 * scaleX;\n\t\t\ty0 = hierarchyNode.y0 * scaleY;\n\t\t\ty1 = hierarchyNode.y1 * scaleY;\n\t\t}\n\t\tlet w = x1 - x0;\n\t\tlet h = y1 - y0;\n\n\t\tconst duration = this.get(\"animationDuration\", 0);\n\t\tconst easing = this.get(\"animationEasing\");\n\n\t\tnode.animate({ key: \"x\", to: x0, duration: duration, easing: easing })\n\t\tnode.animate({ key: \"y\", to: y0, duration: duration, easing: easing })\n\t\tnode.animate({ key: \"width\", to: w, duration: duration, easing: easing })\n\t\tnode.animate({ key: \"height\", to: h, duration: duration, easing: easing })\n\n\t\tif (rectangle) {\n\t\t\tconst fill = dataItem.get(\"fill\");\n\t\t\t\n\t\t\trectangle.animate({ key: \"width\", to: w, duration: duration, easing: easing })\n\t\t\trectangle.animate({ key: \"height\", to: h, duration: duration, easing: easing })\n\t\t\trectangle._setDefault(\"fill\", fill);\n\t\t\trectangle._setDefault(\"stroke\", fill);\t\t\t\n\t\t}\n\t}\n\n\n\tprotected _updateNodesScale(hierarchyNode: d3hierarchy.HierarchyRectangularNode<IPartitionDataObject>) {\n\t\tconst dataItem = hierarchyNode.data.dataItem;\n\t\tif (dataItem) {\n\t\t\tconst node = dataItem.get(\"node\");\n\t\t\tconst rectangle = dataItem.get(\"rectangle\");\n\n\t\t\tconst scaleX = this.getPrivate(\"scaleX\", 1);\n\t\t\tconst scaleY = this.getPrivate(\"scaleY\", 1);\n\n\t\t\tlet x0, x1, y0, y1: number;\n\n\t\t\tif (this.get(\"orientation\") == \"horizontal\") {\n\t\t\t\tx0 = hierarchyNode.y0 * scaleX;\n\t\t\t\tx1 = hierarchyNode.y1 * scaleX;\n\t\t\t\ty0 = hierarchyNode.x0 * scaleY;\n\t\t\t\ty1 = hierarchyNode.x1 * scaleY;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tx0 = hierarchyNode.x0 * scaleX;\n\t\t\t\tx1 = hierarchyNode.x1 * scaleX;\n\t\t\t\ty0 = hierarchyNode.y0 * scaleY;\n\t\t\t\ty1 = hierarchyNode.y1 * scaleY;\n\t\t\t}\n\n\t\t\tconst w = x1 - x0;\n\t\t\tconst h = y1 - y0;\n\n\t\t\tnode.setAll({ x: x0, y: y0, width: w, height: h });\n\t\t\trectangle.setAll({ width: w, height: h });\n\n\t\t\tconst hierarchyChildren = hierarchyNode.children;\n\t\t\tif (hierarchyChildren) {\n\t\t\t\t$array.each(hierarchyChildren, (hierarchyChild) => {\n\t\t\t\t\tthis._updateNodesScale(hierarchyChild)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>): HierarchyNode {\n\t\tconst node = super.makeNode(dataItem);\n\t\tthis._makeNode(dataItem, node);\n\t\treturn node;\n\t}\n\n\tprotected _makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>, node: HierarchyNode) {\n\t\tconst rectangle = node.children.moveValue(this.rectangles.make(), 0);\n\t\tnode.setPrivate(\"tooltipTarget\", rectangle);\n\t\tdataItem.setRaw(\"rectangle\", rectangle);\n\t\trectangle._setDataItem(dataItem);\n\n\t\tconst label = dataItem.get(\"label\");\n\n\t\trectangle.on(\"width\", () => {\n\t\t\tlabel.set(\"maxWidth\", rectangle.width());\n\t\t})\n\n\t\trectangle.on(\"height\", () => {\n\t\t\tlabel.set(\"maxHeight\", rectangle.height());\n\t\t})\n\t}\n\n\tprotected _zoom(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet x0 = 0;\n\t\tlet x1 = 0;\n\t\tlet y0 = 0;\n\t\tlet y1 = 0;\n\n\t\tconst upDepth = this.get(\"upDepth\", 0) + 1;\n\t\tconst topDepth = this.get(\"topDepth\", 0);\n\n\t\tconst width = this.innerWidth();\n\t\tconst height = this.innerHeight();\n\n\t\tconst maxDepth = this.getPrivate(\"maxDepth\", 1);\n\t\tconst levelHeight = height / (maxDepth + 1);\n\t\tconst levelWidth = width / (maxDepth + 1);\n\t\tconst initialDepth = Math.min(this.get(\"initialDepth\", 1), maxDepth - topDepth);\n\n\t\tlet downDepth = this._currentDownDepth;\n\t\tif (downDepth == null) {\n\t\t\tdownDepth = this.get(\"downDepth\", 1);\n\t\t}\n\n\t\tif (dataItem) {\n\t\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\t\t\tlet currentDepth = hierarchyNode.depth;\n\n\t\t\tif (this.get(\"orientation\") == \"horizontal\") {\n\t\t\t\tx0 = hierarchyNode.y0;\n\t\t\t\tx1 = hierarchyNode.y1;\n\n\t\t\t\ty0 = hierarchyNode.x0;\n\t\t\t\ty1 = hierarchyNode.x1;\n\n\t\t\t\tx0 = x1 - levelWidth * upDepth;\n\t\t\t\tx1 = x0 + levelWidth * (downDepth + 1);\n\n\t\t\t\tif (currentDepth < topDepth) {\n\t\t\t\t\ty0 = 0;\n\t\t\t\t\ty1 = height;\n\t\t\t\t\tx0 = levelWidth * topDepth;\n\t\t\t\t\tx1 = x0 + levelWidth * initialDepth;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tx0 = hierarchyNode.x0;\n\t\t\t\tx1 = hierarchyNode.x1;\n\n\t\t\t\ty0 = hierarchyNode.y0;\n\t\t\t\ty1 = hierarchyNode.y1;\n\n\t\t\t\ty0 = y1 - levelHeight * upDepth;\n\t\t\t\ty1 = y0 + levelHeight * (downDepth + 1);\n\n\t\t\t\tif (currentDepth < topDepth) {\n\t\t\t\t\tx0 = 0;\n\t\t\t\t\tx1 = width;\n\t\t\t\t\ty0 = levelHeight * topDepth;\n\t\t\t\t\ty1 = y0 + levelHeight * initialDepth;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet scaleX = width / (x1 - x0);\n\t\tlet scaleY = height / (y1 - y0);\n\n\t\tconst easing = this.get(\"animationEasing\");\n\t\tlet duration = this.get(\"animationDuration\", 0);\n\n\t\tif (!this.inited) {\n\t\t\tduration = 0;\n\t\t}\n\n\t\tthis.animatePrivate({ key: \"scaleX\", to: scaleX, duration: duration, easing: easing });\n\t\tthis.animatePrivate({ key: \"scaleY\", to: scaleY, duration: duration, easing: easing });\n\n\t\tthis.nodesContainer.animate({ key: \"x\", to: -x0 * scaleX, duration: duration, easing: easing });\n\t\tthis.nodesContainer.animate({ key: \"y\", to: -y0 * scaleY, duration: duration, easing: easing });\n\t}\n}\n","import type { Root } from \"../../core/Root\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { HierarchyNode } from \"./HierarchyNode\";\nimport type { Bullet } from \"../../core/render/Bullet\";\nimport type { Series } from \"../../core/render/Series\";\n\nimport { Partition, IPartitionPrivate, IPartitionSettings, IPartitionDataItem } from \"./Partition\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { Slice } from \"../../core/render/Slice\";\nimport { RadialLabel } from \"../../core/render/RadialLabel\";\nimport { Percent, p100, p50 } from \"../../core/util/Percent\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as d3hierarchy from \"d3-hierarchy\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $math from \"../../core/util/Math\";\n\n/**\n * @ignore\n */\nexport interface ISunburstDataObject {\n\tname?: string,\n\tvalue?: number,\n\tchildren?: ISunburstDataObject[],\n\tdataItem?: DataItem<ISunburstDataItem>\n};\n\nexport interface ISunburstDataItem extends IPartitionDataItem {\n\n\t/**\n\t * Data items of child nodes.\n\t */\n\tchildren: Array<DataItem<ISunburstDataItem>>;\n\n\t/**\n\t * Data item of a parent node.\n\t */\n\tparent: DataItem<ISunburstDataItem>;\n\n\t/**\n\t * @ignore\n\t */\n\td3PartitionNode: d3hierarchy.HierarchyRectangularNode<ISunburstDataObject>;\n\n\t/**\n\t * A [[Slice]] element of the node.\n\t */\n\tslice: Slice;\n\n}\n\nexport interface ISunburstSettings extends IPartitionSettings {\n\n\t/**\n\t * Start angle of the series.\n\t *\n\t * @default -90\n\t */\n\tstartAngle?: number;\n\n\t/**\n\t * End angle of the series.\n\t *\n\t * @default 270\n\t */\n\tendAngle?: number;\n\n\t/**\n\t * Inner radius of the suburst pie.\n\t *\n\t * Setting to negative number will mean pixels from outer radius.\n\t *\n\t * @default 0\n\t */\n\tinnerRadius?: number | Percent;\n\n\t/**\n\t * Outer radius of the sunburst pie.\n\t *\n\t * @default 100%\n\t */\n\tradius?: number | Percent;\n\n}\n\nexport interface ISunburstPrivate extends IPartitionPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tdr: number;\n\n\t/**\n\t * @ignore\n\t */\n\tdx: number;\n\n\t/**\n\t * @ignore\n\t */\n\tinnerRadius: number;\n\n\t/**\n\t * @ignore\n\t */\n\thierarchySize?: number;\n\n}\n\n/**\n * Builds a sunburst diagram.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/sunburst/} for more info\n * @important\n */\nexport class Sunburst extends Partition {\n\n\tdeclare public _settings: ISunburstSettings;\n\tdeclare public _privateSettings: ISunburstPrivate;\n\tdeclare public _dataItemSettings: ISunburstDataItem;\n\n\tprotected _tag: string = \"sunburst\";\n\n\tpublic static className: string = \"Sunburst\";\n\tpublic static classNames: Array<string> = Partition.classNames.concat([Sunburst.className]);\n\n\tpublic _partitionLayout = d3hierarchy.partition();\n\n\tdeclare public _rootNode: d3hierarchy.HierarchyRectangularNode<ISunburstDataObject> | undefined;\n\n\t/**\n\t * A list of node slice elements in a [[Sunburst]] chart.\n\t *\n\t * @default new ListTemplate<Slice>\n\t */\n\tpublic readonly slices: ListTemplate<Slice> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Slice._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.slices.template.get(\"themeTags\", []), [this._tag, \"hierarchy\", \"node\", \"shape\"])\n\t\t}, [this.slices.template])\n\t);\n\n\t/**\n\t * A list of label elements in a [[Hierarchy]] chart.\n\t *\n\t * @default new ListTemplate<RadialLabel>\n\t */\n\tpublic readonly labels: ListTemplate<RadialLabel> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => RadialLabel._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), [this._tag])\n\t\t}, [this.labels.template])\n\t);\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.nodesContainer.setAll({ x: p50, y: p50 });\n\t\tthis.setPrivateRaw(\"dx\", 0);\n\t\tthis.setPrivateRaw(\"dr\", 0);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isPrivateDirty(\"dr\") || this.isPrivateDirty(\"dx\")) {\n\t\t\tif (this._rootNode) {\n\t\t\t\tthis._updateNodesScale(this._rootNode);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateVisuals() {\n\t\tif (this._rootNode) {\n\t\t\tconst partitionLayout = this._partitionLayout;\n\n\t\t\tlet bounds = $math.getArcBounds(0, 0, this.get(\"startAngle\", 0), this.get(\"endAngle\", 360), 1);\n\n\t\t\tlet w = this.innerWidth();\n\t\t\tlet h = this.innerHeight();\n\n\t\t\tconst wr = w / (bounds.right - bounds.left);\n\t\t\tconst hr = h / (bounds.bottom - bounds.top);\n\n\t\t\tlet s = Math.min(wr, hr);\n\n\t\t\tlet r = $utils.relativeToValue(this.get(\"radius\", p100), s);\n\t\t\tlet ir = $utils.relativeToValue(this.get(\"innerRadius\", 0), r);\n\n\t\t\tif (ir < 0) {\n\t\t\t\tir = r + ir;\n\t\t\t}\n\n\t\t\ts = r - ir;\n\n\t\t\tthis.setPrivateRaw(\"innerRadius\", ir);\n\t\t\tthis.setPrivateRaw(\"hierarchySize\", s);\n\n\t\t\tpartitionLayout.size([s, s]);\n\n\t\t\tthis.nodesContainer.setAll({\n\t\t\t\tdy: -r * (bounds.bottom + bounds.top) / 2, dx: -r * (bounds.right + bounds.left) / 2\n\t\t\t})\n\n\t\t\tconst nodePadding = this.get(\"nodePadding\");\n\n\t\t\tif ($type.isNumber(nodePadding)) {\n\t\t\t\tpartitionLayout.padding(nodePadding);\n\t\t\t}\n\n\n\t\t\tpartitionLayout(this._rootNode);\n\t\t\tthis._updateNodes(this._rootNode);\n\t\t}\n\t}\n\n\tprotected _updateNode(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateNode(dataItem);\n\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\t\tconst node = dataItem.get(\"node\");\n\n\t\tnode.setAll({ x: 0, y: 0 });\n\t\tconst duration = this.get(\"animationDuration\", 0);\n\t\tconst easing = this.get(\"animationEasing\");\n\n\t\tconst scaleX = this.getPrivate(\"scaleX\", 1);\n\t\tconst scaleY = this.getPrivate(\"scaleY\", 1);\n\t\tconst dr = this.getPrivate(\"dr\", 0);\n\t\tconst dx = this.getPrivate(\"dx\", 0);\n\n\t\tconst x0 = hierarchyNode.x0 * scaleX + dx;\n\t\tconst x1 = hierarchyNode.x1 * scaleX + dx;\n\t\tconst y0 = hierarchyNode.y0 * scaleY;\n\t\tconst y1 = hierarchyNode.y1 * scaleY;\n\n\t\tconst ir = this.getPrivate(\"innerRadius\");\n\t\tconst hs = this.getPrivate(\"hierarchySize\", 0);\n\n\t\tconst slice = dataItem.get(\"slice\");\n\t\tif (slice) {\n\t\t\tconst startAngle = this.get(\"startAngle\", -90);\n\t\t\tconst endAngle = this.get(\"endAngle\", 270);\n\n\t\t\tconst sliceStartAngle = startAngle + x0 / hs * (endAngle - startAngle);\n\t\t\tconst arc = startAngle + x1 / hs * (endAngle - startAngle) - sliceStartAngle;\n\n\t\t\tlet sliceInnerRadius = ir + y0;\n\t\t\tlet sliceRadius = ir + y1;\n\n\t\t\tsliceInnerRadius -= dr;\n\t\t\tsliceRadius -= dr;\n\n\t\t\tsliceRadius = Math.max(0, sliceRadius);\n\t\t\tsliceInnerRadius = Math.max(0, sliceInnerRadius);\n\n\t\t\tslice.animate({ key: \"radius\", to: sliceRadius, duration: duration, easing: easing })\n\t\t\tslice.animate({ key: \"innerRadius\", to: sliceInnerRadius, duration: duration, easing: easing })\n\t\t\tslice.animate({ key: \"startAngle\", to: sliceStartAngle, duration: duration, easing: easing })\n\t\t\tslice.animate({ key: \"arc\", to: arc, duration: duration, easing: easing })\n\n\t\t\tconst fill = dataItem.get(\"fill\");\n\n\t\t\tslice._setDefault(\"fill\", fill);\n\t\t\tslice._setDefault(\"stroke\", fill);\n\t\t}\n\t}\n\n\n\tprotected _updateNodesScale(hierarchyNode: d3hierarchy.HierarchyRectangularNode<ISunburstDataObject>) {\n\t\tconst dataItem = hierarchyNode.data.dataItem;\n\t\tif (dataItem) {\n\t\t\tconst scaleX = this.getPrivate(\"scaleX\", 1);\n\t\t\tconst scaleY = this.getPrivate(\"scaleY\", 1);\n\t\t\tconst dr = this.getPrivate(\"dr\", 0);\n\t\t\tconst dx = this.getPrivate(\"dx\", 0);\n\n\t\t\tconst x0 = hierarchyNode.x0 * scaleX + dx;\n\t\t\tconst x1 = hierarchyNode.x1 * scaleX + dx;\n\t\t\tconst y0 = hierarchyNode.y0 * scaleY;\n\t\t\tconst y1 = hierarchyNode.y1 * scaleY;\n\n\t\t\tconst ir = this.getPrivate(\"innerRadius\");\n\t\t\tconst hs = this.getPrivate(\"hierarchySize\", 0);\n\n\t\t\tconst slice = dataItem.get(\"slice\");\n\t\t\tif (slice) {\n\t\t\t\tconst startAngle = this.get(\"startAngle\", -90);\n\t\t\t\tconst endAngle = this.get(\"endAngle\", 270);\n\n\t\t\t\tconst sliceStartAngle = startAngle + x0 / hs * (endAngle - startAngle);\n\t\t\t\tconst arc = startAngle + x1 / hs * (endAngle - startAngle) - sliceStartAngle;\n\n\t\t\t\tlet sliceInnerRadius = ir + y0;\n\t\t\t\tlet sliceRadius = ir + y1;\n\n\t\t\t\tsliceInnerRadius -= dr;\n\t\t\t\tsliceRadius -= dr;\n\n\t\t\t\tsliceRadius = Math.max(0, sliceRadius);\n\t\t\t\tsliceInnerRadius = Math.max(0, sliceInnerRadius);\n\n\t\t\t\tslice.setAll({ radius: sliceRadius, innerRadius: sliceInnerRadius, startAngle: sliceStartAngle, arc: arc });\n\t\t\t}\n\n\t\t\tconst hierarchyChildren = hierarchyNode.children;\n\t\t\tif (hierarchyChildren) {\n\t\t\t\t$array.each(hierarchyChildren, (hierarchyChild) => {\n\t\t\t\t\tthis._updateNodesScale(hierarchyChild)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>, node: HierarchyNode) {\n\t\tconst slice = node.children.moveValue(this.slices.make(), 0);\n\t\tnode.setPrivate(\"tooltipTarget\", slice);\n\t\tdataItem.setRaw(\"slice\", slice);\n\n\t\tslice._setDataItem(dataItem);\n\n\t\tslice.on(\"arc\", () => {\n\t\t\tthis._updateLabel(dataItem);\n\t\t})\n\t\tslice.on(\"innerRadius\", () => {\n\t\t\tthis._updateLabel(dataItem);\n\t\t})\n\t\tslice.on(\"radius\", () => {\n\t\t\tthis._updateLabel(dataItem);\n\t\t})\n\t}\n\n\tprotected _updateLabel(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst slice = dataItem.get(\"slice\");\n\t\tconst label = dataItem.get(\"label\") as RadialLabel;\n\n\t\tif (slice && label) {\n\t\t\tlet innerRadius = slice.get(\"innerRadius\", 0);\n\t\t\tlet radius = slice.get(\"radius\", 0);\n\t\t\tlet angle = slice.get(\"startAngle\", 0);\n\t\t\tlet arc = Math.abs(slice.get(\"arc\", 0));\n\n\t\t\tlabel.set(\"labelAngle\", angle + arc / 2);\n\t\t\tlabel.set(\"baseRadius\", innerRadius);\n\t\t\tlabel.set(\"radius\", (radius - innerRadius) / 2)\n\n\n\t\t\tlet maxWidth = radius - innerRadius;\n\t\t\tlet maxHeight = Math.PI * 2 * radius * arc / 360;\n\t\t\tif (arc >= 360) {\n\t\t\t\tmaxWidth *= 2;\n\t\t\t\tmaxHeight = maxWidth;\n\t\t\t}\n\t\t\tlabel.set(\"maxHeight\", maxHeight);\n\t\t\tlabel.set(\"maxWidth\", maxWidth);\n\t\t}\n\t}\n\n\tprotected _zoom(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet x0 = 0;\n\t\tlet x1 = 0;\n\t\tlet hs = this.getPrivate(\"hierarchySize\", 0);\n\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\tlet upDepth = this.get(\"upDepth\", 0);\n\t\tlet topDepth = this.get(\"topDepth\", 0);\n\t\tlet currentDepth = hierarchyNode.depth;\n\t\tlet maxDepth = this.getPrivate(\"maxDepth\", 1);\n\t\tlet downDepth = this._currentDownDepth;\n\n\t\tif (downDepth == null) {\n\t\t\tdownDepth = this.get(\"downDepth\", 1);\n\t\t}\n\n\t\tconst levelHeight = hs / (maxDepth + 1);\n\n\t\tif (currentDepth < topDepth) {\n\t\t\tcurrentDepth = topDepth;\n\t\t}\n\n\t\tif (currentDepth - upDepth < 0) {\n\t\t\tupDepth = currentDepth;\n\t\t}\n\n\t\tx0 = hierarchyNode.x0;\n\t\tx1 = hierarchyNode.x1;\n\n\t\tlet scaleDepth = (downDepth + upDepth + 1);\n\n\t\tif (scaleDepth > maxDepth - topDepth + 1) {\n\t\t\tscaleDepth = maxDepth - topDepth + 1;\n\t\t}\n\n\t\tlet scaleX = hs / (x1 - x0);\n\t\tlet scaleY = hs / (levelHeight * scaleDepth);\n\n\t\tlet dr = Math.max(currentDepth - upDepth, topDepth) * levelHeight * scaleY;\n\n\t\tconst easing = this.get(\"animationEasing\");\n\t\tlet duration = this.get(\"animationDuration\", 0);\n\n\t\tif (!this.inited) {\n\t\t\tduration = 0;\n\t\t}\n\n\t\tlet dx = -x0 * scaleX\n\n\t\tthis.animatePrivate({ key: \"scaleX\", to: scaleX, duration: duration, easing: easing });\n\t\tthis.animatePrivate({ key: \"scaleY\", to: scaleY, duration: duration, easing: easing });\n\t\tthis.animatePrivate({ key: \"dr\", to: dr, duration: duration, easing: easing });\n\t\tthis.animatePrivate({ key: \"dx\", to: dx, duration: duration, easing: easing });\n\t}\n\n\n\tprotected _handleSingle(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst parent = dataItem.get(\"parent\");\n\t\tif (parent) {\n\t\t\tconst children = parent.get(\"children\");\n\t\t\tif (children) {\n\t\t\t\t$array.each(children, (child) => {\n\t\t\t\t\tif (child != dataItem) {\n\t\t\t\t\t\tthis.disableDataItem(child);\n\t\t\t\t\t\tchild.get(\"node\").hide();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\tthis._handleSingle(parent);\n\t\t}\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\n\t\tconst sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tconst dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\n\t\t\tconst locationX = bullet.get(\"locationX\", 0.5);\n\t\t\tconst locationY = bullet.get(\"locationY\", 0.5);\n\n\t\t\tconst slice = dataItem.get(\"slice\");\n\t\t\tconst arc = slice.get(\"arc\", 0);\n\t\t\tconst angle = slice.get(\"startAngle\", 0) + slice.get(\"arc\", 0) * locationX;\n\t\t\tconst innerRadius = slice.get(\"innerRadius\", 0);\n\t\t\tconst radius = innerRadius + (slice.get(\"radius\", 0) - innerRadius) * locationY;\n\n\t\t\tlet x = $math.cos(angle) * radius;\n\t\t\tlet y = $math.sin(angle) * radius;\n\n\t\t\tif ($math.round(arc, 5) === 360 && $math.round(innerRadius, 2) === 0) {\n\t\t\t\tx = 0;\n\t\t\t\ty = 0;\n\t\t\t}\n\n\t\t\tsprite.set(\"x\", x);\n\t\t\tsprite.set(\"y\", y);\n\t\t}\n\t}\n\n\tprotected _makeBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>, bulletFunction: (root: Root, series: Series, dataItem: DataItem<this[\"_dataItemSettings\"]>) => Bullet | undefined, index?: number) {\n\t\tconst bullet = super._makeBullet(dataItem, bulletFunction, index);\n\t\t\n\t\tif(bullet){\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tconst slice = dataItem.get(\"slice\");\n\n\t\t\tif (sprite && slice) {\n\t\t\t\tslice.on(\"arc\", () => {\n\t\t\t\t\tthis._positionBullet(bullet);\n\t\t\t\t})\n\n\t\t\t\tslice.on(\"radius\", () => {\n\t\t\t\t\tthis._positionBullet(bullet);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\treturn bullet;\n\t\t}\n\t}\n}\n","import {Node} from \"./hierarchy/index.js\";\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { IPoint } from \"../../core/util/IPoint\";\n\nimport { LinkedHierarchy, ILinkedHierarchyPrivate, ILinkedHierarchySettings, ILinkedHierarchyDataItem, ILinkedHierarchyEvents } from \"./LinkedHierarchy\";\n\nimport * as d3hierarchy from \"d3-hierarchy\";\n\nexport interface ITreeDataObject {\n\tname?: string,\n\tvalue?: number,\n\tchildren?: ITreeDataObject[],\n\tdataItem?: DataItem<ITreeDataItem>\n};\n\nexport interface ITreeDataItem extends ILinkedHierarchyDataItem {\n\n\t/**\n\t * An array of children data items.\n\t */\n\tchildren: Array<DataItem<ITreeDataItem>>;\n\n\t/**\n\t * Parent data item.\n\t * @type {DataItem<ITreeDataItem>}\n\t */\n\tparent: DataItem<ITreeDataItem>;\n\n}\n\nexport interface ITreeSettings extends ILinkedHierarchySettings {\n\n\t/**\n\t * Orientation of the diagram.\n\t *\n\t * @default \"vertical\"\n\t */\n\torientation?: \"horizontal\" | \"vertical\";\n\n}\n\nexport interface ITreePrivate extends ILinkedHierarchyPrivate {\n\n\t/**\n\t * Current horizontal scale.\n\t */\n\tscaleX?: number;\n\n\t/**\n\t * Current vertical scale.\n\t */\n\tscaleY?: number;\n}\n\nexport interface ITreeEvents extends ILinkedHierarchyEvents {\n}\n\n/**\n * Displays a tree diagram.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/tree/} for more info\n * @important\n */\nexport class Tree extends LinkedHierarchy {\n\n\tdeclare public _settings: ITreeSettings;\n\tdeclare public _privateSettings: ITreePrivate;\n\tdeclare public _dataItemSettings: ITreeDataItem;\n\n\tprotected _tag: string = \"tree\";\n\n\tpublic static className: string = \"Tree\";\n\tpublic static classNames: Array<string> = LinkedHierarchy.classNames.concat([Tree.className]);\n\n\tpublic _hierarchyLayout = d3hierarchy.tree();\n\tdeclare public _rootNode: d3hierarchy.HierarchyCircularNode<ITreeDataObject> | undefined;\n\tpublic _packData: ITreeDataObject | undefined;\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"orientation\")) {\n\t\t\tthis._updateVisuals();\n\t\t}\n\t}\n\n\tprotected _updateVisuals() {\n\t\tif (this._rootNode) {\n\t\t\tconst layout = this._hierarchyLayout;\n\n\t\t\tif (this.get(\"orientation\") == \"vertical\") {\n\t\t\t\tlayout.size([this.innerWidth(), this.innerHeight()]);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlayout.size([this.innerHeight(), this.innerWidth()]);\n\t\t\t}\n\n\t\t\tlayout(this._rootNode);\n\t\t}\n\n\t\tsuper._updateVisuals();\n\t}\n\n\tprotected _getPoint(hierarchyNode: this[\"_dataItemSettings\"][\"d3HierarchyNode\"]): IPoint {\n\t\tif (this.get(\"orientation\") == \"vertical\") {\n\t\t\treturn { x: hierarchyNode.x, y: hierarchyNode.y };\n\t\t}\n\t\telse {\n\t\t\treturn { x: hierarchyNode.y, y: hierarchyNode.x };\n\t\t}\n\t}\n\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n}\n","import treemapDice from \"./dice.js\";\nimport treemapSlice from \"./slice.js\";\n\nexport var phi = (1 + Math.sqrt(5)) / 2;\n\nexport function squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nexport default (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n","import roundNode from \"./round.js\";\nimport squarify from \"./squarify.js\";\nimport {required} from \"../accessors.js\";\nimport constant, {constantZero} from \"../constant.js\";\n\nexport default function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = value ? (x0 * valueRight + x1 * valueLeft) / value : x1;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = value ? (y0 * valueRight + y1 * valueLeft) / value : y1;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n}\n","import dice from \"./dice.js\";\nimport slice from \"./slice.js\";\n\nexport default function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? slice : dice)(parent, x0, y0, x1, y1);\n}\n","import type { HierarchyNode } from \"./HierarchyNode\";\nimport type { DataItem } from \"../../core/render/Component\";\n\nimport { Hierarchy, IHierarchyPrivate, IHierarchySettings, IHierarchyDataItem, IHierarchyDataObject } from \"./Hierarchy\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as d3hierarchy from \"d3-hierarchy\";\n\nexport interface ITreemapDataObject { name?: string, value?: number, children?: ITreemapDataObject[], dataItem?: DataItem<ITreemapDataItem> };\n\nexport interface ITreemapDataItem extends IHierarchyDataItem {\n\tchildren: Array<DataItem<ITreemapDataItem>>;\n\tparent: DataItem<ITreemapDataItem>;\n\td3HierarchyNode: d3hierarchy.HierarchyRectangularNode<IHierarchyDataObject>;\n\trectangle: RoundedRectangle;\n}\n\nexport interface ITreemapSettings extends IHierarchySettings {\n\n\t/**\n\t * Gap between nodes. In pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/treemap/#Margins}\n\t */\n\tnodePaddingInner?: number;\n\n\t/**\n\t * Gap between nodes and outer edge of the chart. In pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/treemap/#Margins}\n\t */\n\tnodePaddingOuter?: number;\n\n\t/**\n\t * Gap between nodes and top edge.\n\t *\n\t * Will be ignored if `nodePaddingOuter` is set.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/treemap/#Margins}\n\t */\n\tnodePaddingTop?: number;\n\n\t/**\n\t * Gap between nodes and bottomedge.\n\t *\n\t * Will be ignored if `nodePaddingOuter` is set.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/treemap/#Margins}\n\t */\n\tnodePaddingBottom?: number;\n\n\t/**\n\t * Gap between nodes and left edge.\n\t *\n\t * Will be ignored if `nodePaddingOuter` is set.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/treemap/#Margins}\n\t */\n\tnodePaddingLeft?: number;\n\n\t/**\n\t * Gap between nodes and bottom edge.\n\t *\n\t * Will be ignored if `nodePaddingOuter` is set.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/treemap/#Margins}\n\t */\n\tnodePaddingRight?: number;\n\n\t/**\n\t * An algorithm to use when laying out node rectangles.\n\t *\n\t * @see {@link }\n\t * @default \"squarify\"\n\t */\n\tlayoutAlgorithm?: \"binary\" | \"squarify\" | \"slice\" | \"dice\" | \"sliceDice\";\n\n}\n\nexport interface ITreemapPrivate extends IHierarchyPrivate {\n\n\t/**\n\t * Current horizontal scale.\n\t */\n\tscaleX?: number;\n\n\t/**\n\t * Current vertical scale.\n\t */\n\tscaleY?: number;\n\n}\n\n/**\n * Treemap series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/treemap/} for more info\n */\nexport class Treemap extends Hierarchy {\n\n\tdeclare public _settings: ITreemapSettings;\n\tdeclare public _privateSettings: ITreemapPrivate;\n\tdeclare public _dataItemSettings: ITreemapDataItem;\n\n\tprotected _tag: string = \"treemap\";\n\n\tpublic static className: string = \"Treemap\";\n\tpublic static classNames: Array<string> = Hierarchy.classNames.concat([Treemap.className]);\n\n\tpublic readonly rectangleTemplate: Template<RoundedRectangle> = Template.new({});\n\n\tpublic _treemapLayout = d3hierarchy.treemap().tile(d3hierarchy.treemapSquarify);\n\n\tdeclare public _rootNode: d3hierarchy.HierarchyRectangularNode<ITreemapDataObject> | undefined;\n\n\t/**\n\t * A list of node rectangle elements in a [[Treemap]] chart.\n\t *\n\t * @default new ListTemplate<RoundedRectangle>\n\t */\n\tpublic readonly rectangles: ListTemplate<RoundedRectangle> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => RoundedRectangle._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.rectangles.template.get(\"themeTags\", []), [this._tag, \"shape\"])\n\t\t}, [this.rectangles.template])\n\t);\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.setPrivate(\"scaleX\", 1);\n\t\tthis.setPrivate(\"scaleY\", 1);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"layoutAlgorithm\")) {\n\t\t\tlet algorithm;\n\n\t\t\tswitch (this.get(\"layoutAlgorithm\")) {\n\t\t\t\tcase \"squarify\":\n\t\t\t\t\talgorithm = d3hierarchy.treemapSquarify;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"binary\":\n\t\t\t\t\talgorithm = d3hierarchy.treemapBinary;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"slice\":\n\t\t\t\t\talgorithm = d3hierarchy.treemapSlice;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"dice\":\n\t\t\t\t\talgorithm = d3hierarchy.treemapDice;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"sliceDice\":\n\t\t\t\t\talgorithm = d3hierarchy.treemapSliceDice;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (algorithm) {\n\t\t\t\tthis._treemapLayout = d3hierarchy.treemap().tile(algorithm);\n\t\t\t}\n\t\t\tif (this._rootNode) {\n\t\t\t\tthis._updateNodes(this._rootNode);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"nodePaddingRight\") || this.isDirty(\"nodePaddingLeft\") || this.isDirty(\"nodePaddingTop\") || this.isDirty(\"nodePaddingBottom\") || this.isDirty(\"nodePaddingOuter\") || this.isDirty(\"nodePaddingInner\")) {\n\t\t\tif (this._rootNode) {\n\t\t\t\tthis._updateNodes(this._rootNode);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isPrivateDirty(\"scaleX\") || this.isPrivateDirty(\"scaleY\")) {\n\t\t\tif (this._rootNode) {\n\t\t\t\tthis._updateNodesScale(this._rootNode);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateVisuals() {\n\t\tif (this._rootNode) {\n\t\t\tconst treemapLayout = this._treemapLayout;\n\t\t\ttreemapLayout.size([this.innerWidth(), this.innerHeight()]);\n\n\t\t\tconst paddingLeft = this.get(\"nodePaddingLeft\");\n\t\t\tconst paddingRight = this.get(\"nodePaddingRight\");\n\t\t\tconst paddingTop = this.get(\"nodePaddingTop\");\n\t\t\tconst paddingBottom = this.get(\"nodePaddingBottom\");\n\t\t\tconst paddingInner = this.get(\"nodePaddingInner\");\n\t\t\tconst paddingOuter = this.get(\"nodePaddingOuter\");\n\t\t\tif ($type.isNumber(paddingLeft)) {\n\t\t\t\ttreemapLayout.paddingLeft(paddingLeft);\n\t\t\t}\n\t\t\tif ($type.isNumber(paddingRight)) {\n\t\t\t\ttreemapLayout.paddingRight(paddingRight);\n\t\t\t}\n\t\t\tif ($type.isNumber(paddingTop)) {\n\t\t\t\ttreemapLayout.paddingTop(paddingTop);\n\t\t\t}\n\t\t\tif ($type.isNumber(paddingBottom)) {\n\t\t\t\ttreemapLayout.paddingBottom(paddingBottom);\n\t\t\t}\n\t\t\tif ($type.isNumber(paddingInner)) {\n\t\t\t\ttreemapLayout.paddingInner(paddingInner);\n\t\t\t}\n\t\t\tif ($type.isNumber(paddingOuter)) {\n\t\t\t\ttreemapLayout.paddingOuter(paddingOuter);\n\t\t\t}\n\n\t\t\ttreemapLayout(this._rootNode);\n\t\t\tthis._updateNodes(this._rootNode);\n\t\t}\n\t}\n\n\tprotected _updateNode(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateNode(dataItem);\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tconst rectangle = dataItem.get(\"rectangle\");\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\tconst scaleX = this.getPrivate(\"scaleX\", 1);\n\t\tconst scaleY = this.getPrivate(\"scaleY\", 1);\n\n\t\tconst x0 = hierarchyNode.x0 * scaleX;\n\t\tconst x1 = hierarchyNode.x1 * scaleX;\n\t\tconst y0 = hierarchyNode.y0 * scaleY;\n\t\tconst y1 = hierarchyNode.y1 * scaleY;\n\n\t\tconst w = x1 - x0;\n\t\tconst h = y1 - y0;\n\n\t\tconst duration = this.get(\"animationDuration\", 0);\n\t\tconst easing = this.get(\"animationEasing\");\n\n\t\tnode.animate({ key: \"x\", to: x0, duration: duration, easing: easing })\n\t\tnode.animate({ key: \"y\", to: y0, duration: duration, easing: easing })\n\n\t\tnode.animate({ key: \"width\", to: w, duration: duration, easing: easing })\n\t\tnode.animate({ key: \"height\", to: h, duration: duration, easing: easing })\n\n\t\tif (rectangle) {\n\t\t\tconst fill = dataItem.get(\"fill\");\n\n\t\t\trectangle.animate({ key: \"width\", to: w, duration: duration, easing: easing })\n\t\t\trectangle.animate({ key: \"height\", to: h, duration: duration, easing: easing })\n\t\t\trectangle._setDefault(\"fill\", fill);\n\t\t\trectangle._setDefault(\"stroke\", fill);\n\t\t}\n\t}\n\n\n\tprotected _updateNodesScale(hierarchyNode: d3hierarchy.HierarchyRectangularNode<ITreemapDataObject>) {\n\t\tconst dataItem = hierarchyNode.data.dataItem;\n\t\tif (dataItem) {\n\t\t\tconst node = dataItem.get(\"node\");\n\t\t\tconst rectangle = dataItem.get(\"rectangle\");\n\n\t\t\tconst scaleX = this.getPrivate(\"scaleX\", 1);\n\t\t\tconst scaleY = this.getPrivate(\"scaleY\", 1);\n\n\t\t\tconst x0 = hierarchyNode.x0 * scaleX;\n\t\t\tconst x1 = hierarchyNode.x1 * scaleX;\n\t\t\tconst y0 = hierarchyNode.y0 * scaleY;\n\t\t\tconst y1 = hierarchyNode.y1 * scaleY;\n\n\t\t\tconst w = x1 - x0;\n\t\t\tconst h = y1 - y0;\n\n\t\t\tnode.setAll({ x: x0, y: y0, width: w, height: h });\n\t\t\trectangle.setAll({ width: w, height: h });\n\n\t\t\tconst hierarchyChildren = hierarchyNode.children;\n\t\t\tif (hierarchyChildren) {\n\t\t\t\t$array.each(hierarchyChildren, (hierarchyChild) => {\n\t\t\t\t\tthis._updateNodesScale(hierarchyChild)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>): HierarchyNode {\n\t\tconst node = super.makeNode(dataItem);\n\n\t\tconst rectangle = node.children.moveValue(this.rectangles.make(), 0);\n\n\t\tnode.setPrivate(\"tooltipTarget\", rectangle);\n\t\tdataItem.setRaw(\"rectangle\", rectangle);\n\n\t\tconst label = dataItem.get(\"label\");\n\n\t\trectangle.on(\"width\", () => {\n\t\t\tlabel.set(\"maxWidth\", rectangle.width());\n\t\t})\n\n\t\trectangle.on(\"height\", () => {\n\t\t\tlabel.set(\"maxHeight\", rectangle.height());\n\t\t})\n\n\t\treturn node;\n\t}\n\n\tpublic _zoom(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\tconst nodePaddingOuter = this.get(\"nodePaddingOuter\", 0);\n\n\t\tlet x0 = hierarchyNode.x0 + nodePaddingOuter;\n\t\tlet x1 = hierarchyNode.x1 - nodePaddingOuter;\n\n\t\tlet y0 = hierarchyNode.y0 + nodePaddingOuter;\n\t\tlet y1 = hierarchyNode.y1 - nodePaddingOuter;\n\n\t\tlet scaleX = (this.innerWidth() - nodePaddingOuter * 2) / (x1 - x0);\n\t\tlet scaleY = (this.innerHeight() - nodePaddingOuter * 2) / (y1 - y0);\n\n\t\tconst easing = this.get(\"animationEasing\");\n\t\tconst duration = this.get(\"animationDuration\", 0);\n\n\t\tthis.animatePrivate({ key: \"scaleX\", to: scaleX, duration: duration, easing: easing });\n\t\tthis.animatePrivate({ key: \"scaleY\", to: scaleY, duration: duration, easing: easing });\n\n\t\tthis.nodesContainer.animate({ key: \"x\", to: nodePaddingOuter - x0 * scaleX, duration: duration, easing: easing });\n\t\tthis.nodesContainer.animate({ key: \"y\", to: nodePaddingOuter - y0 * scaleY, duration: duration, easing: easing });\n\t}\n}\n","import * as m from \"./../../dist/es2015/hierarchy.js\";\nexport const am5hierarchy = m;"],"sourceRoot":""}